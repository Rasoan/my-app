{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/DialogItem/DialogItem.module.scss","components/DialogueInformation/DialogueInformation.module.scss","components/DialogueInformation/DialogueInformation.jsx","components/DialogueInformation/index.js","components/DialogItem/index.js","components/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/index.js","pages/DialogsPage/DialogsPage.jsx","pages/DialogsPage/index.js"],"names":["module","exports","DialogueInformation","props","header","info","className","style","container","information","prototypes","PropTypes","string","isRequired","DialogItem","userId","userName","hasNewMessages","lastDialogActivityDate","lastUserActivityDate","newMessagesCount","photos","path","dialogItemContainer","to","dialogLink","userImg","src","small","alt","containerInfo","Dialogs","dialogs","getDialogs","useEffect","dialogsData","map","element","i","key","id","dialogsContainer","array","func","mapStateToPropsForRedirect","state","isAuth","auth","actionCreators","onSendMessageClick","compose","Component","RedirectComponent","this","React","connect","dialogsPage","messages","DialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,oC,oBCArCD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,QAAU,4BAA4B,WAAa,+BAA+B,cAAgB,oC,oBCAlLD,EAAOC,QAAU,CAAC,UAAY,uCAAuC,OAAS,oCAAoC,YAAc,2C,0ICG1HC,EAAsB,SAACC,GAAW,IAC/BC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,KAEf,OAAQ,yBAAKC,UAAWC,IAAMC,WACpB,0BAAMF,UAAWC,IAAMH,QAASA,EAAhC,QACA,0BAAME,UAAWC,IAAME,aAAcJ,GAAQ,KAIzDH,EAAoBQ,WAAa,CAC/BN,OAAQO,IAAUC,OAAOC,WACzBR,KAAMM,IAAUC,OAAOC,YAGVX,ICjBAA,EDiBAA,EEjBAY,ECKI,SAACX,GAAW,IACtBY,EAA4GZ,EAA5GY,OAAQC,EAAoGb,EAApGa,SAAUC,EAA0Fd,EAA1Fc,eAAgBC,EAA0Ef,EAA1Ee,uBAAwBC,EAAkDhB,EAAlDgB,qBAAsBC,EAA4BjB,EAA5BiB,iBAAkBC,EAAUlB,EAAVkB,OAErGC,EAAO,aAAeP,EAE1B,OACE,yBAAKT,UAAWC,IAAMgB,qBACpB,kBAAC,IAAD,CAASC,GAAIF,EAAMhB,UAAWC,IAAMkB,YAClC,yBAAKnB,UAAWC,IAAMmB,QACjBC,IAAKN,EAAOO,MACZC,IAAI,SACT,2BAAIb,GACJ,yBAAKV,UAAWC,IAAMuB,eACpB,kBAAC,EAAD,CAAqB1B,OAAQ,wFACRC,KAAMe,IAC3B,kBAAC,EAAD,CAAqBhB,OAAQ,iHACRC,KAAMY,IAC3B,kBAAC,EAAD,CAAqBb,OAAQ,gHACRC,KAAMa,IAC3B,kBAAC,EAAD,CAAqBd,OAAQ,0DACRC,KAAMc,QCrB/BY,EAAU,SAAC5B,GAAW,IACnB6B,EAAuB7B,EAAvB6B,QAASC,EAAc9B,EAAd8B,WAChBC,qBAAU,WACRD,MACC,CAACA,IAEJ,IAAIE,EAAcH,EAAQI,KAAI,SAACC,EAASC,GAAV,OAAkB,kBAAC,EAAD,CAAYC,IAAKF,EAAQG,GAAK,IAAMF,EACxBtB,SAAUqB,EAAQrB,SAClBD,OAAQsB,EAAQG,GAChBvB,eAAgBoB,EAAQpB,eACxBC,uBAAwBmB,EAAQnB,uBAChCC,qBAAsBkB,EAAQlB,qBAC9BC,iBAAkBiB,EAAQjB,iBAC1BC,OAAQgB,EAAQhB,YAE5E,OACE,yBAAKf,UAAWC,IAAMkC,kBACnBN,IAKPJ,EAAQrB,WAAa,CACnBsB,QAASrB,IAAU+B,MAAM7B,WACzBoB,WAAYtB,IAAUgC,KAAK9B,YAGdkB,Q,yDC5BXa,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,QCUfE,EAAiB,CACrBC,uBACAhB,gBChBaF,EDmBAmB,aDZiB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAIC,KAAKlD,MAAM2C,OAER,kBAACK,EAAcE,KAAKlD,OAFG,kBAAC,IAAD,CAAUqB,GAAG,uBAHF,GACb8B,IAAMH,WAUtC,OAFqCI,YAAQX,EAARW,CAAoCH,KCKpDG,aAhBC,SAACV,GACvB,MAAO,CACCV,YAAaU,EAAMW,YAAYrB,YAC/BsB,SAAUZ,EAAMW,YAAYC,SAC5BX,OAAQD,EAAME,KAAKD,OACnBd,QAASa,EAAMW,YAAYxB,WAWWgB,GAFjCE,CAGSnB,GEtBT2B","file":"static/js/5.befccb32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__3o0Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItemContainer\":\"DialogItem_dialogItemContainer__17CwA\",\"userImg\":\"DialogItem_userImg__tfvG5\",\"dialogLink\":\"DialogItem_dialogLink__3azcN\",\"containerInfo\":\"DialogItem_containerInfo__22ArO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogueInformation_container__11aPr\",\"header\":\"DialogueInformation_header__2lciR\",\"information\":\"DialogueInformation_information__37-Wr\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./DialogueInformation.module.scss\";\n\nconst DialogueInformation = (props) => {\n  const {header, info} = props;\n\n  return (<div className={style.container}>\n            <span className={style.header}>{header}&nbsp;</span>\n            <span className={style.information}>{info || 0}</span>\n          </div>)\n}\n\nDialogueInformation.prototypes = {\n  header: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n}\n\nexport default DialogueInformation;","import DialogueInformation from \"./DialogueInformation\";\nexport default DialogueInformation;","import DialogItem from \"./DialogItem\";\nexport default DialogItem;","import React from \"react\";\nimport style from \"./DialogItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogueInformation from \"../DialogueInformation\";\n\nconst DialogItem = (props) => {\n  const {userId, userName, hasNewMessages, lastDialogActivityDate, lastUserActivityDate, newMessagesCount, photos} = props;\n\n  let path = \"/messages/\" + userId;\n\n  return (\n    <div className={style.dialogItemContainer}>\n      <NavLink to={path} className={style.dialogLink}>\n        <img className={style.userImg}\n             src={photos.small}\n             alt=\"user\" />\n        <p>{userName}</p>\n        <div className={style.containerInfo}>\n          <DialogueInformation header={'Новых сообщений'}\n                               info={newMessagesCount} />\n          <DialogueInformation header={'Есть новые сообщения'}\n                               info={hasNewMessages} />\n          <DialogueInformation header={'Последнее сообщение'}\n                               info={lastDialogActivityDate} />\n          <DialogueInformation header={'Был онлайн'}\n                               info={lastUserActivityDate} />\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nDialogItem.propTypes = {\n  userId: PropTypes.number.isRequired,\n  userName: PropTypes.string.isRequired,\n  hasNewMessages: PropTypes.bool.isRequired,\n  lastDialogActivityDate: PropTypes.string.isRequired,\n  lastUserActivityDate: PropTypes.string.isRequired,\n  newMessagesCount: PropTypes.number.isRequired,\n  photos: PropTypes.object.isRequired,\n};\n\nexport default DialogItem;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Dialogs.module.scss\";\nimport DialogItem from \"../DialogItem\";\n\nconst Dialogs = (props) => {\n  const {dialogs, getDialogs} = props;\n  useEffect(() => {\n    getDialogs();\n  }, [getDialogs]);\n  \n  let dialogsData = dialogs.map((element, i) => ( <DialogItem key={element.id + \" \" + i}\n                                                              userName={element.userName} \n                                                              userId={element.id}\n                                                              hasNewMessages={element.hasNewMessages}\n                                                              lastDialogActivityDate={element.lastDialogActivityDate}\n                                                              lastUserActivityDate={element.lastUserActivityDate}\n                                                              newMessagesCount={element.newMessagesCount}\n                                                              photos={element.photos} />));\n\n  return (\n    <div className={style.dialogsContainer}>\n      {dialogsData}\n    </div>\n  );\n};\n\nDialogs.prototypes = {\n  dialogs: PropTypes.array.isRequired,\n  getDialogs: PropTypes.func.isRequired,\n}\n\nexport default Dialogs;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to='/authorization' />\n\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import Dialogs from \"./Dialogs\";\nimport {onSendMessageClick, getDialogs} from \"../../redux/dialogs-reducer.js\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n          dialogsData: state.dialogsPage.dialogsData,\n          messages: state.dialogsPage.messages,\n          isAuth: state.auth.isAuth,\n          dialogs: state.dialogsPage.dialogs,\n         }\n}\n\nconst actionCreators = {\n  onSendMessageClick,\n  getDialogs\n};\n\nexport default compose(\n                       withAuthRedirect,\n                       connect(mapStateToProps, actionCreators)\n                      )(Dialogs);","import Dialogs from \"../../components/Dialogs\";\nexport default Dialogs;","import DialogsPage from \"./DialogsPage\";\nexport default DialogsPage;"],"sourceRoot":""}