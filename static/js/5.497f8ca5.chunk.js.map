{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","style","MessageContainer","message","DialogItem","path","id","navlink","to","name","maxLength10","maxLengthCreator","MessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","TextareaDefault","validate","required","Dialogs","dialogsData","messages","onSendMessageClick","map","element","dialogs","dialogsItems","formData","mapStateToPropsForRedirect","state","isAuth","auth","compose","Component","RedirectComponent","this","React","connect","dialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,4B,0CCA9ID,EAAOC,QAAU,CAAC,QAAU,8B,gGCebC,EAZC,SAACC,GACf,OACE,yBAAKC,UAAWC,IAAMC,kBACnBH,EAAMI,U,0BCUEC,EAZI,SAACL,GAClB,IAAIM,EAAO,WAAaN,EAAMO,GAC9B,OACE,kBAAC,IAAD,CAASN,UAAWC,IAAMM,QAASC,GAAIH,GAAON,EAAMU,O,kCCAlDC,EAAcC,YAAiB,IAgB/BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAdL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACpB,OACE,0BAAMC,SAAUD,GACd,6BACE,kBAACE,EAAA,EAAD,CAAOC,YAAa,6HACbT,KAAM,UACNU,UAAWC,IACXC,SAAU,CAACC,IAAUZ,MAE9B,qJA+BSa,EAxBC,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,mBACvCF,EAAcA,EAAYG,KAAI,SAACC,GAAD,OAC5B,kBAAC,EAAD,CAAYnB,KAAMmB,EAAQnB,KAAMH,GAAIsB,EAAQtB,QAE9CmB,EAAWA,EAASE,KAAI,SAACC,GAAD,OACtB,kBAAC,EAAD,CAASzB,QAASyB,EAAQzB,aAM5B,OACE,yBAAKH,UAAWC,IAAM4B,SACpB,yBAAK7B,UAAWC,IAAM6B,cAAeN,GACrC,yBAAKxB,UAAWC,IAAMwB,UACpB,6BAAMA,GACN,6BACE,kBAACb,EAAD,CAAkBI,SAVR,SAACe,GACjBL,EAAmBK,EAAS5B,gB,wDC7B5B6B,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,OCQNE,uBDLiB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAIC,KAAKxC,MAAMmC,OAER,kBAACG,EAAcE,KAAKxC,OAFG,kBAAC,IAAD,CAAUS,GAAG,uBAHF,GACbgC,IAAMH,WAUtC,OAFqCI,YAAQT,EAARS,CAAoCH,KCFpDG,aATD,SAACR,GACrB,MAAO,CACCT,YAAaS,EAAMS,YAAYlB,YAC/BC,SAAUQ,EAAMS,YAAYjB,SAC5BS,OAAQD,EAAME,KAAKD,UAKmB,CAACR,yBAFlCU,CAGSb","file":"static/js/5.497f8ca5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2hxxD\",\"active\":\"Dialogs_active__4-wmQ\",\"dialogsItems\":\"Dialogs_dialogsItems__3_f-M\",\"messages\":\"Dialogs_messages__3xuQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"DialogItem_navlink__1WyxT\"};","import React from \"react\";\nimport style from \"./Message.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Message = (props) => {\n  return (\n    <div className={style.MessageContainer}>\n      {props.message}\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport style from \"./DialogItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/Dialog/\" + props.id;\n  return (\n    <NavLink className={style.navlink} to={path}>{props.name}</NavLink>\n  );\n};\n\nDialogItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport style from \"./Dialogs.module.scss\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextareaDefault} from \"../common/FormsControls/FormControls\";\nimport {required, maxLengthCreator} from \"../../utils/validators/validators\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MessageForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field placeholder={\"Введите ваше сообщение\"} \n               name={\"message\"}\n               component={TextareaDefault}\n               validate={[required, maxLength10]} />\n      </div>\n      <button>Отправить сообщение</button>\n    </form>\n  );\n};\n\nconst MessageFormRedux = reduxForm({form: 'message'},)(MessageForm);\n\nconst Dialogs = ({dialogsData, messages, onSendMessageClick}) => { \n  dialogsData = dialogsData.map((element) => (\n    <DialogItem name={element.name} id={element.id} />\n  ));\n  messages = messages.map((element) => (\n    <Message message={element.message} />\n  ));\n  let sendMessage = (formData) => {\n    onSendMessageClick(formData.message);\n  }\n\n  return (\n    <div className={style.dialogs}>\n      <div className={style.dialogsItems}>{dialogsData}</div>\n      <div className={style.messages}>\n        <div>{messages}</div>\n        <div>\n          <MessageFormRedux onSubmit={sendMessage} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;","import React from \"react\";\nimport Component from \"react\"\nimport {connect} from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to='/authorization' />\n\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {onSendMessageClick} from \"../../redux/dialogs-reducer.js\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n          dialogsData: state.dialogsPage.dialogsData,\n          messages: state.dialogsPage.messages,\n          isAuth: state.auth.isAuth,\n         }\n}\nexport default compose(\n                       withAuthRedirect,\n                       connect(mapStateToProps, {onSendMessageClick})\n                      )(Dialogs);"],"sourceRoot":""}