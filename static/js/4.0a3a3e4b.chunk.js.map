{"version":3,"sources":["components/Preloader/PreloaderServerUpload.jsx","components/Profile/Profile.module.scss","components/Profile/ProfileDescription/ProfileDescription.module.scss","components/Status/Status.module.scss","components/Profile/ProfilePicture/ProfilePicture.module.scss","components/Profile/Posts/Post/Post.module.scss","components/Profile/ProfileDescription/ProfileDataForm.jsx","components/Profile/ProfileDescription/ProfileDescription.jsx","components/Profile/ProfileDescription/ProfileDescriptionContainer.jsx","components/Status/Status.jsx","components/Status/StatusContainer.jsx","components/Profile/ProfilePicture/ProfilePicture.jsx","components/Profile/ProfilePicture/ProfilePictureContainer.jsx","components/Profile/Posts/Post/Post.jsx","components/common/FormsControls/FormControls.js","utils/validators/validators.js","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","pages/ProfilePage/ProfilePage.jsx","components/Profile/index.js","pages/ProfilePage/index.js"],"names":["PreloaderServerUpload","props","module","exports","ProfileDataForm","handleProfile","profile","useForm","defaultValues","register","handleSubmit","onSubmit","className","style","ProfileInfoContainer","type","Object","keys","contacts","map","key","pattern","RegExp","ProfileData","toggleSetEditMode","controlPanels","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileDescription","editMode","saveProfile","formData","a","initialValues","compose","connect","state","profilePage","app","useState","setEditMode","Status","activateEditMode","deActivateEditModeEnterOrEsc","onStatusChange","deActivateEditMode","statusText","statusTextStyle","statusTextContainer","inputStatusText","onFocus","event","target","select","onKeyDown","e","onBlur","onChange","value","autoFocus","statusGlobalState","defaultStatusText","updateNewStatusText","statusCopy","setStatusCopy","status","setStatus","useEffect","keyCode","statusInputText","ProfilePicture","photos","fileInputRef","profilePictureContainer","image","src","large","profilePictureUpload","profilePictureUploadBlock","ref","React","createRef","isFetching","updateProfilePicture","preventDefault","current","Post","PostContainer","PostContentImg","width","height","imgSrc","content","PostCountLikes","countLikes","TextareaDefault","input","meta","CORRECT_INPUT","touched","error","INCORRECT_INPUT","correct","inCorrect","default","promptText","required","maxLength10","maxLength","length","maxLengthCreator","PostFormRedux","reduxForm","form","Field","placeholder","name","component","validate","Posts","posts","post","postData","addPost","PostsContainer","this","Component","Profile","ProfileContainer","pictureAndDescriptionContainer","myId","auth","userId","logoutFetching","getProfile","lookingMyProfile","notLookingMyProfile","getStatus","checkUserOrOwner","withRouter","match","params","ProfilePage"],"mappings":"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","file":"static/js/4.0a3a3e4b.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Preloaders.module.scss\";\n\nconst PreloaderServerUpload = (props) => {\n  return (<div>\n            <h2>Идёт запрос на сервер!</h2>\n          </div>\n          );\n};\n\nexport default PreloaderServerUpload;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__2uJ-p\",\"pictureAndDescriptionContainer\":\"Profile_pictureAndDescriptionContainer__OqIeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileDescription_image__Asl6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusTextContainer\":\"Status_statusTextContainer__u-_gA\",\"statusText\":\"Status_statusText__1QUlp\",\"inputStatusText\":\"Status_inputStatusText__3eVHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfilePicture_image__3elqO\",\"profilePictureContainer\":\"ProfilePicture_profilePictureContainer__I-Z-i\",\"profilePictureUpload\":\"ProfilePicture_profilePictureUpload__3wCJ-\",\"profilePictureUploadBlock\":\"ProfilePicture_profilePictureUploadBlock__3__1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostContainer\":\"Post_PostContainer__32T4K\",\"PostContentImg\":\"Post_PostContentImg__2pdwg\",\"PostCountLikes\":\"Post_PostCountLikes__N1816\",\"image\":\"Post_image__2kv_N\"};","import React from \"react\";\nimport style from \"./ProfileDescription.module.scss\";\nimport { useForm } from \"react-hook-form\";\n\nexport const ProfileDataForm = ({handleProfile, profile}) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {...profile},\n  });\n\n  return (<form onSubmit={handleSubmit(handleProfile)} className={style.ProfileInfoContainer}>\n            <button>Сохранить</button>\n            <div>\n              <b>Fullname</b>\n              <input type=\"text\" {...register(\"fullName\")} />\n            </div>\n            <div>\n              <p><b>Looking for a job</b></p>\n              <input type=\"checkbox\" {...register(\"lookingForAJob\")} />\n            </div>\n            <div>\n              <p><b>Looking for a job Description</b></p>\n              <textarea {...register(\"lookingForAJobDescription\")} />\n            </div>\n            <div>\n              <p><b>About me:</b></p>\n              <textarea {...register(\"aboutMe\")} />\n            </div>\n            <div>\n              <p><b>Contacts:</b> <ul>{Object.keys(profile.contacts).map(key => {\n                return <li key={key}>\n                          <p><b>{key}</b></p>\n                          <input {...register(`contacts.${key}`, {pattern: new RegExp(\"[http]\")})} />\n                       </li>\n              })}</ul></p>\n            </div>\n          </form>);\n}","import React from \"react\";\nimport style from \"./ProfileDescription.module.scss\";\nimport {ProfileDataForm} from \"./ProfileDataForm\"\n\nconst ProfileDescription = ({profile, toggleSetEditMode, editMode, saveProfile, controlPanels}) => {\n  const onSubmit = async (formData) => {\n    await saveProfile(formData);\n    toggleSetEditMode();\n  } \n  return (<div>\n            {editMode ? <ProfileDataForm handleProfile={onSubmit}\n                                         profile={profile}\n                                         initialValues={profile} \n                                         toggleSetEditMode={toggleSetEditMode} />: \n                        <ProfileData profile={profile}\n                                     toggleSetEditMode={toggleSetEditMode}\n                                     controlPanels={controlPanels} />}\n          </div>);\n};\n\nconst ProfileData = ({profile, toggleSetEditMode, controlPanels}) => {\n  return (<div className={style.ProfileInfoContainer}>\n            {controlPanels && <button onClick={toggleSetEditMode}>Редактировать</button>}\n            <div>\n              <p><b>Fullname:</b> {profile.fullName}</p>\n              <p><b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\": \"No\"}</p>\n            </div>\n            {profile.lookingForAJob && \n            <div>\n              <p>{profile.lookingForAJobDescription}</p>\n            </div>}\n            <div>\n              <p><b>About me:</b> {profile.aboutMe}</p>\n            </div>\n            <div>\n              <p><b>Contacts:</b> <ul>{Object.keys(profile.contacts).map(key => {\n                return <li key={key}>\n                          <Contact  contactTitle={key} contactValue={profile.contacts[key]} />\n                       </li>\n              })}</ul></p>\n            </div>\n          </div>);\n}\n\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return (<div>\n           <p><b>{contactTitle}:</b> {contactValue}</p>\n         </div>);\n}\n\nexport default ProfileDescription;","import React, {useState} from \"react\";\nimport ProfileDescription from \"./ProfileDescription\";\nimport {connect} from \"react-redux\";\nimport {getProfile, saveProfile} from \"../../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\nconst ProfileDescriptionContainer = ({profile, saveProfile, controlPanels}) => {\n  const [editMode, setEditMode] = useState(false)\n  const toggleSetEditMode = () => {\n    let mode = editMode ? false: true;\n    setEditMode(mode);\n  }\n  \n\n  return (<ProfileDescription profile={profile}\n                              toggleSetEditMode={toggleSetEditMode}\n                              editMode={editMode}\n                              saveProfile={saveProfile}\n                              controlPanels={controlPanels} />);\n};\n\nlet mapStateToProps = (state) => (\n  {\n    profile: state.profilePage.profile,\n    controlPanels: state.app.controlPanels,\n  }\n)\n\nexport default compose(\n                       connect(mapStateToProps,{saveProfile}),\n                      )(ProfileDescriptionContainer);","import React from \"react\";\nimport style from \"./Status.module.scss\";\n\nconst Status = ({controlPanels, activateEditMode, editMode, deActivateEditModeEnterOrEsc, onStatusChange, deActivateEditMode, statusText}) => {\n  activateEditMode = controlPanels ? activateEditMode: ()=>{};\n  let statusTextStyle = controlPanels ? style.statusText: \"\";\n  \n  return <div className={style.statusTextContainer}>\n           {editMode && <input className={style.inputStatusText}\n                               onFocus={(event) => event.target.select()}\n                               onKeyDown={(e) => deActivateEditModeEnterOrEsc(e)}\n                               onBlur={deActivateEditMode}\n                               onChange={(e) => onStatusChange(e.target.value)} \n                               type=\"text\"\n                               autoFocus={true}\n                               value={statusText} />}\n           {!editMode && <span className={statusTextStyle} \n                               onClick={activateEditMode}>{statusText}</span>}            \n         </div>\n};\n\nexport default Status;","import React, {useState, useEffect} from \"react\";\nimport style from \"./Status.module.scss\";\nimport Status from \"./Status\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport {updateNewStatusText} from \"../../redux/profile-reducer\";\n\nconst StatusContainer = ({defaultStatusText, statusGlobalState, updateNewStatusText, controlPanels}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [statusCopy, setStatusCopy] = useState(statusGlobalState);\n  const [status, setStatus] = useState(statusGlobalState);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  \n  const deActivateEditMode = () => {\n    setEditMode(false);\n    let statusTemporaryVariable = status !== \"\" ? status: defaultStatusText;\n    updateNewStatusText(statusTemporaryVariable);\n    if (status === \"\") {\n      setStatus(defaultStatusText);\n      setStatusCopy(defaultStatusText);\n    }\n  }\n\n  const onStatusChange = (statusInputText) => {\n    setStatus(statusInputText);\n  }\n\n  const deActivateEditModeEnterOrEsc = (e) => {\n    if (e.keyCode === 13) { // если клавиша Enter\n      setEditMode(false);\n      let statusTemporaryVariable = status !== \"\" ? status: defaultStatusText;\n      updateNewStatusText(statusTemporaryVariable);\n      if (status === \"\") {\n        setStatus(defaultStatusText);\n        setStatusCopy(defaultStatusText);\n      }\n    }\n\n    if (e.keyCode === 27) { // если клавиша esc\n      setEditMode(false);\n      setStatus(statusCopy);\n    }\n  }\n\n  useEffect(() => {\n    setStatus(statusGlobalState);\n    setStatusCopy(statusGlobalState);\n  }, [statusGlobalState]);\n\n  return <Status editMode={editMode}\n                 activateEditMode={activateEditMode} \n                 deActivateEditMode={deActivateEditMode}\n                 deActivateEditModeEnterOrEsc={deActivateEditModeEnterOrEsc}\n                 onStatusChange={onStatusChange} \n                 statusText={status} \n                 controlPanels={controlPanels}/>\n}\n\nlet mapStateToProps = (state) => ({\n  statusGlobalState: state.profilePage.statusText,\n  defaultStatusText: state.profilePage.defaultStatusText,\n  controlPanels: state.app.controlPanels,\n});\n\nexport default compose(\n                       connect(mapStateToProps, {updateNewStatusText})\n                      )(StatusContainer);","import React, {useState} from \"react\";\nimport style from \"./ProfilePicture.module.scss\";\n\nconst ProfilePicture = ({photos, onSubmit, fileInputRef, controlPanels}) => {\n\n  return (\n    <div className={style.profilePictureContainer}>\n      <img className={style.image} src={photos.large} />\n      {controlPanels && <form onSubmit={onSubmit} className={style.profilePictureUpload}>\n         <div className={style.profilePictureUploadBlock}>\n          <input type=\"file\" ref={fileInputRef} />\n          <button type=\"submit\">Загрузить файл</button>\n        </div>\n      </form>}    \n    </div>\n  );\n};\n\nexport default ProfilePicture;","import React from \"react\";\nimport ProfilePicture from \"./ProfilePicture\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {updateProfilePicture} from \"../../../redux/profile-reducer\";\nconst fileInputRef = React.createRef();\n\nconst ProfilePictureContainer = ({photos, updateProfilePicture, fileInputRef, controlPanels}) => {\n  const onSubmit = (event) => {\n    event.preventDefault();\n    updateProfilePicture(fileInputRef.current);\n  }\n  \n  return <ProfilePicture photos={photos} \n                         onSubmit={onSubmit}\n                         fileInputRef={fileInputRef}\n                         controlPanels={controlPanels} />;\n};\n\n\n\nlet mapStateToProps = (state) => (\n    {\n      photos: state.profilePage.profile.photos,\n      isFetching: state.profilePage.isFetching,\n      fileInputRef: fileInputRef,\n      controlPanels: state.app.controlPanels,\n    }\n  )\n  \n  export default compose(\n                         connect(mapStateToProps,{updateProfilePicture}),\n                        )(ProfilePictureContainer);","import React from \"react\";\nimport style from \"./Post.module.scss\";\nimport PropTypes from \"prop-types\";\n\n\n\nconst Post = (props) => {\n  \n  return (\n    <div className={style.PostContainer}>\n      <div className={style.PostContentImg}>\n        <img\n          className={style.image}\n          width=\"50\"\n          height=\"50\"\n          src={props.imgSrc}\n        ></img>\n        <p>{props.content}</p>\n      </div>\n      <p className={style.PostCountLikes}>{props.countLikes}</p>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  content: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  countLikes: PropTypes.string.isRequired,\n};\n\nexport default Post;\n","import React from \"react\";\nimport style from \"./FormControls.module.scss\";\n\nexport const TextareaDefault = ({input, meta, ...props}) => {\n    const CORRECT_INPUT = meta.touched && !meta.error;\n    const INCORRECT_INPUT = meta.error && meta.touched;\n    const NOT_TOUCHED = !meta.touched;\n    return (\n        <div>\n            <div>\n              <textarea {...input} {...props} className={CORRECT_INPUT ? style.correct : \n                                                         INCORRECT_INPUT ? style.inCorrect : \n                                                         NOT_TOUCHED ? style.default: style.default} />\n            </div>\n            {INCORRECT_INPUT && <span className={style.promptText}>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const InputDefault = ({input, meta, type=null, ...props}) => {\n    const CORRECT_INPUT = meta.touched && !meta.error;\n    const INCORRECT_INPUT = meta.error && meta.touched;\n    const NOT_TOUCHED = !meta.touched;\n    return (\n        <div>\n            <div>\n              <input {...type} {...input} {...props} className={CORRECT_INPUT ? style.correct : \n                                                      INCORRECT_INPUT ? style.inCorrect : \n                                                      NOT_TOUCHED ? style.default: style.default} />\n            </div>\n            {INCORRECT_INPUT && <span className={style.promptText}>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const Login = ({input, meta, ...props}) => {\n    const CORRECT_INPUT = meta.touched && !meta.error;\n    const INCORRECT_INPUT = meta.error && meta.touched;\n    const NOT_TOUCHED = !meta.touched;\n    return (\n        <div>\n            <div>\n              <input {...input} {...props} className={CORRECT_INPUT ? style.correct : \n                                                      INCORRECT_INPUT ? style.inCorrect : \n                                                      NOT_TOUCHED ? style.default: style.default} />\n            </div>\n            {INCORRECT_INPUT && <span className={style.promptText}>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const Pass = ({input, meta, ...props}) => {\n    const CORRECT_INPUT = meta.touched && !meta.error;\n    const INCORRECT_INPUT = meta.error && meta.touched;\n    const NOT_TOUCHED = !meta.touched;\n    return (\n        <div>\n            <div>\n              <input {...input} {...props} className={CORRECT_INPUT ? style.correct : \n                                                      INCORRECT_INPUT ? style.inCorrect : \n                                                      NOT_TOUCHED ? style.default: style.default} />\n            </div>\n            {INCORRECT_INPUT && <span className={style.promptText}>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const InputCheckbox = ({input, ...props}) => {\n\n    return ( <input {...input} {...props} type=\"checkbox\" />);\n}","export const required = (value) => {\n    if (value) {\n        return undefined;\n    }\n    return \"Пустое поле!\";\n}\n\nexport const maxLengthCreator = (maxLength = 0) => (value = \"\") => {\n    if (value.length > maxLength) {\n        return `Максимальная длина ${maxLength} символов!`;\n    }\n    return undefined;\n}","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextareaDefault} from \"../../common/FormsControls/FormControls\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field placeholder={\"Введите ваше пост\"}\n               name={\"post\"}\n               component={TextareaDefault} \n               validate={[required, maxLength10]} />\n      </div>\n      <button>Отправить сообщение</button>\n    </form>\n  );\n};\n\nconst PostFormRedux = reduxForm({form: 'profile'},)(PostForm);\n\nconst Posts = (props) => {\n  let posts = props\n             .posts\n             .map(post => <Post content={post.content} \n                                 imgSrc={post.imgSrc} \n                                 countLikes={post.countLikes} />);\n  \n  let addPost = (postData) => {\n    props.addPost(postData.post);\n  }\n  return (\n    <div>\n      <h3>My posts</h3>\n      {posts}\n      <PostFormRedux onSubmit={addPost} />\n    </div>\n  );\n};\n\n\n// Posts.propTypes = {\n//   content: PropTypes.string,\n//   imgSrc: PropTypes.string,\n//   countLikes: PropTypes.string,\n// };\nexport default Posts;\n","import React from \"react\";\nimport Posts from \"./Posts\";\nimport {addPost} from '../../../redux/profile-reducer.js';\nimport {connect} from \"react-redux\";\n\nclass PostsContainer extends React.Component {\n  render() {\n    return <Posts posts={this.props.posts}\n                  addPost={this.props.addPost} />\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n          posts: state.profilePage.posts,\n         }\n}\n\nexport default connect(mapStateToProps, {addPost})(PostsContainer);","import React from \"react\";\nimport style from \"./Profile.module.scss\";\nimport PropTypes from \"prop-types\";\nimport PreloaderServerUpload from '../Preloader/PreloaderServerUpload';\nimport ProfileDescriptionContainer from \"./ProfileDescription/ProfileDescriptionContainer\";\nimport StatusContainer from \"../Status/StatusContainer\";\nimport ProfilePictureContainer from \"./ProfilePicture/ProfilePictureContainer\";\nimport PostsContainer from \"./Posts/PostsContainer\";\n      \nconst Profile = ({profile, isFetching}) => {\n  if (isFetching) return (<PreloaderServerUpload/>);\n  if (!profile) return <></> \n  return (\n    <div className={style.ProfileContainer}>\n      <div className={style.pictureAndDescriptionContainer}>\n        <ProfilePictureContainer />\n        <ProfileDescriptionContainer />\n      </div>\n      <StatusContainer /> \n      <PostsContainer profile={profile} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import Profile from \"../../components/Profile\";\nexport default Profile;","import React, {useEffect} from \"react\";\nimport style from \"./Profile.module.scss\";\nimport PropTypes from \"prop-types\";\nimport Profile from \"../Profile/Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, lookingMyProfile, notLookingMyProfile, getStatus} from \"../../redux/profile-reducer\";\nimport {checkUserOrOwner} from \"../../redux/app-reducer\";\nimport { withRouter } from \"react-router\";\nimport {compose} from \"redux\";\n                 \nconst ProfileContainer = (props) => {\n   let {myId, match, profile, \n        logoutFetching, getProfile, getStatus, \n        checkUserOrOwner} = props;\n   \n    useEffect( () => {\n      if (logoutFetching) return;\n      getProfile(match.params.userId);\n      getStatus(match.params.userId);\n      checkUserOrOwner(match.params.userId);\n    }, [myId, logoutFetching]);\n    return (<Profile {...props} profile={profile} />);\n};\n\n\n\nlet mapStateToProps = (state) => (\n  {\n    profile: state.profilePage.profile,\n    isFetching: state.profilePage.isFetching,\n    myId: state.auth.userId,\n    logoutFetching: state.auth.logoutFetching,\n  }\n)\n\nexport default compose(\n                       connect(mapStateToProps,{\n                                                getProfile, lookingMyProfile, \n                                                notLookingMyProfile, getStatus,\n                                                checkUserOrOwner\n                                                }),\n                       withRouter\n                      )(ProfileContainer);\n","import ProfilePage from \"./ProfilePage\";\n\nexport default ProfilePage;"],"sourceRoot":""}