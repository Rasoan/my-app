{"version":3,"sources":["components/Preloader/PreloaderServerUpload.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile.module.scss","components/Status/Status.module.scss","components/Profile/Posts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Status/Status.jsx","components/Status/StatusContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["PreloaderServerUpload","props","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","className","style","PostContainer","PostContentImg","image","width","height","src","imgSrc","content","PostCountLikes","countLikes","maxLength10","maxLengthCreator","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","TextareaDefault","validate","required","Posts","posts","map","post","postData","addPost","PostsContainer","this","React","Component","connect","state","profilePage","Status","lookingAtMyProfile","activateEditMode","editMode","deActivateEditModeEnterOrEsc","onStatusChange","deActivateEditMode","statusText","statusTextStyle","statusTextContainer","inputStatusText","onFocus","event","target","select","onKeyDown","e","onBlur","onChange","type","autoFocus","onClick","compose","defaultStatusText","updateNewStatusText","useState","setEditMode","status","setStatus","keyCode","statusInputText","ProfileInfo","ProfileInfoContainer","profile","fullName","photos","large","Profile","isFetching","ProfileContainer","getProfile","match","params","userId","getStatus","notLookingMyProfile","lookingMyProfile","withRouter"],"mappings":"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","file":"static/js/3.877be0b2.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Preloaders.module.scss\";\n\nconst PreloaderServerUpload = (props) => {\n  return (<div>\n            <h2>Идёт запрос на сервер!</h2>\n          </div>\n          );\n};\n\nexport default PreloaderServerUpload;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__2uJ-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusTextContainer\":\"Status_statusTextContainer__u-_gA\",\"statusText\":\"Status_statusText__1QUlp\",\"inputStatusText\":\"Status_inputStatusText__3eVHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostContainer\":\"Post_PostContainer__32T4K\",\"PostContentImg\":\"Post_PostContentImg__2pdwg\",\"PostCountLikes\":\"Post_PostCountLikes__N1816\",\"image\":\"Post_image__2kv_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__Zj90a\"};","import React from \"react\";\nimport style from \"./Post.module.scss\";\nimport PropTypes from \"prop-types\";\n\n\n\nconst Post = (props) => {\n  \n  return (\n    <div className={style.PostContainer}>\n      <div className={style.PostContentImg}>\n        <img\n          className={style.image}\n          width=\"50\"\n          height=\"50\"\n          src={props.imgSrc}\n        ></img>\n        <p>{props.content}</p>\n      </div>\n      <p className={style.PostCountLikes}>{props.countLikes}</p>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  content: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  countLikes: PropTypes.string.isRequired,\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextareaDefault} from \"../../common/FormsControls/FormControls\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field placeholder={\"Введите ваше пост\"}\n               name={\"post\"}\n               component={TextareaDefault} \n               validate={[required, maxLength10]} />\n      </div>\n      <button>Отправить сообщение</button>\n    </form>\n  );\n};\n\nconst PostFormRedux = reduxForm({form: 'profile'},)(PostForm);\n\nconst Posts = (props) => {\n  let posts = props\n             .posts\n             .map(post => <Post content={post.content} \n                                 imgSrc={post.imgSrc} \n                                 countLikes={post.countLikes} />);\n  \n  let addPost = (postData) => {\n    props.addPost(postData.post);\n  }\n  return (\n    <div>\n      <h3>My posts</h3>\n      {posts}\n      <PostFormRedux onSubmit={addPost} />\n    </div>\n  );\n};\n\n\n// Posts.propTypes = {\n//   content: PropTypes.string,\n//   imgSrc: PropTypes.string,\n//   countLikes: PropTypes.string,\n// };\nexport default Posts;\n","import React from \"react\";\nimport Posts from \"./Posts\";\nimport {addPost} from '../../../redux/profile-reducer.js';\nimport {connect} from \"react-redux\";\n\nclass PostsContainer extends React.Component {\n  render() {\n    return <Posts posts={this.props.posts}\n                  addPost={this.props.addPost} />\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n          posts: state.profilePage.posts,\n         }\n}\n\nexport default connect(mapStateToProps, {addPost})(PostsContainer);","import React from \"react\";\nimport style from \"./Status.module.scss\";\n\nconst Status = ({lookingAtMyProfile, activateEditMode, editMode, deActivateEditModeEnterOrEsc, onStatusChange, deActivateEditMode, statusText}) => {\n  activateEditMode = lookingAtMyProfile ? activateEditMode: ()=>{};\n  let statusTextStyle = lookingAtMyProfile ? style.statusText: \"\";\n  \n  return <div className={style.statusTextContainer}>\n           {editMode && <input className={style.inputStatusText}\n                               onFocus={(event) => event.target.select()}\n                               onKeyDown={(e) => deActivateEditModeEnterOrEsc(e)}\n                               onBlur={deActivateEditMode}\n                               onChange={(e) => onStatusChange(e.target.value)} \n                               type=\"text\"\n                               autoFocus={true}\n                               value={statusText} />}\n           {!editMode && <span className={statusTextStyle} \n                               onClick={activateEditMode}>{statusText}</span>}            \n         </div>\n};\n\nexport default Status;","import React, {useState} from \"react\";\nimport style from \"./Status.module.scss\";\nimport Status from \"./Status\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport {updateNewStatusText} from \"../../redux/profile-reducer\";\n\nconst StatusContainer = ({defaultStatusText, updateNewStatusText}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(defaultStatusText);\n  //const [statusTextCopy, setStatusTextCopy] = useState(null)\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deActivateEditMode = () => {\n    setEditMode(false);\n    updateNewStatusText(status);\n  }\n\n  const onStatusChange = (statusInputText) => {\n    setStatus(statusInputText);\n  }\n\n  const deActivateEditModeEnterOrEsc = (e) => {\n    if (e.keyCode === 13) { // если клавиша Enter\n      setEditMode(false);\n      //let statusText = this.state.statusText !== \"\" ? this.state.statusText: this.props.defaultStatusText;\n      updateNewStatusText(status);\n    }\n\n    if (e.keyCode === 27) { // если клавиша esc\n     // this.setState({editMode: false, statusText: this.state.statusTextCopy,});\n      setEditMode(false);\n      updateNewStatusText(status); // заглушка\n    }\n  }\n\n  return <Status editMode={editMode}\n                 activateEditMode={activateEditMode} \n                 deActivateEditMode={deActivateEditMode}\n                 deActivateEditModeEnterOrEsc={deActivateEditModeEnterOrEsc}\n                 onStatusChange={onStatusChange} \n                 statusText={status} \n                 lookingAtMyProfile={true}/>\n}\n\nlet mapStateToProps = (state) => ({\n  statusText: state.profilePage.statusText,\n  defaultStatusText: state.profilePage.defaultStatusText,\n  lookingAtMyProfile: state.profilePage.lookingAtMyProfile,\n});\n\nexport default compose(\n                       connect(mapStateToProps, {updateNewStatusText})\n                      )(StatusContainer);","import React from \"react\";\nimport style from \"./ProfileInfo.module.scss\";\nimport StatusContainer from \"../../Status/StatusContainer\";\n\n\nconst ProfileInfo = (props) => {\n  return (\n    <div className={style.ProfileInfoContainer}>\n      <h1>{props.profile.fullName}</h1>\n      <img className={style.image} src={props.profile.photos.large} />\n      <StatusContainer placeholder={\"Привет мир\"} />\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport style from \"./Profile.module.scss\";\nimport PropTypes from \"prop-types\";\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport PreloaderServerUpload from '../Preloader/PreloaderServerUpload';\n             \nconst Profile = ({profile, isFetching}) => {\n  if (isFetching) return (<PreloaderServerUpload/>);\n  if (!profile) return <></> \n  return (\n    <div className={style.ProfileContainer}>\n      <ProfileInfo profile={profile} />\n      <PostsContainer profile={profile} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport style from \"./Profile.module.scss\";\nimport PropTypes from \"prop-types\";\nimport Profile from \"../Profile/Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, lookingMyProfile, notLookingMyProfile, getStatus} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router\";\nimport {compose} from \"redux\";\n                 \nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    this.props.getProfile(this.props.match.params.userId);\n    this.props.getStatus(this.props.match.params.userId);\n    if (this.props.match.params.userId) {\n      this.props.notLookingMyProfile();\n    }\n    else {\n      this.props.lookingMyProfile();\n    }\n  }\n  render() {\n    return (\n            <Profile {...this.props} profile={this.props.profile} />\n           );\n  };\n}\n\nlet mapStateToProps = (state) => (\n  {\n    profile: state.profilePage.profile,\n    isFetching: state.profilePage.isFetching,\n  }\n)\n\nexport default compose(\n                       connect(mapStateToProps,{getProfile, lookingMyProfile, notLookingMyProfile, getStatus}),\n                       withRouter\n                      )(ProfileContainer);\n"],"sourceRoot":""}