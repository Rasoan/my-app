{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/DialogItem/DialogItem.module.scss","components/DialogueInformation/DialogueInformation.module.scss","components/DialogueInformation/index.js","components/DialogueInformation/DialogueInformation.jsx","components/DialogItem/index.js","components/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","pages/DialogsPage/DialogsPage.jsx","components/Dialogs/index.js","pages/DialogsPage/index.js"],"names":["module","exports","DialogueInformation","header","info","className","style","container","information","DialogItem","props","userId","userName","hasNewMessages","lastDialogActivityDate","lastUserActivityDate","newMessagesCount","photos","path","dialogItemContainer","to","dialogLink","userImg","src","small","containerInfo","Dialogs","dialogs","getDialogs","useEffect","dialogsData","map","element","id","dialogsContainer","mapStateToPropsForRedirect","state","isAuth","auth","compose","Component","RedirectComponent","this","React","connect","dialogsPage","messages","onSendMessageClick","DialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,oC,oBCArCD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,QAAU,4BAA4B,WAAa,+BAA+B,cAAgB,oC,oBCAlLD,EAAOC,QAAU,CAAC,UAAY,uCAAuC,OAAS,oCAAoC,YAAc,2C,0HCAjHC,ECEa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAElC,OAAQ,yBAAKC,UAAWC,IAAMC,WACrB,0BAAMF,UAAWC,IAAMH,QAASA,EAAhC,KADD,IACiD,0BAAME,UAAWC,IAAME,aAAcJ,GAAQ,KCL3FK,ECKI,SAACC,GAAW,IACtBC,EAA4GD,EAA5GC,OAAQC,EAAoGF,EAApGE,SAAUC,EAA0FH,EAA1FG,eAAgBC,EAA0EJ,EAA1EI,uBAAwBC,EAAkDL,EAAlDK,qBAAsBC,EAA4BN,EAA5BM,iBAAkBC,EAAUP,EAAVO,OAErGC,EAAO,aAAeP,EAE1B,OACE,yBAAKN,UAAWC,IAAMa,qBACpB,kBAAC,IAAD,CAASC,GAAIF,EAAMb,UAAWC,IAAMe,YAClC,yBAAKhB,UAAWC,IAAMgB,QAASC,IAAKN,EAAOO,QAC3C,2BAAIZ,GACJ,yBAAKP,UAAWC,IAAMmB,eACpB,kBAAC,EAAD,CAAqBtB,OAAQ,wFACRC,KAAMY,IAC3B,kBAAC,EAAD,CAAqBb,OAAQ,iHACRC,KAAMS,IAC3B,kBAAC,EAAD,CAAqBV,OAAQ,gHACRC,KAAMU,IAC3B,kBAAC,EAAD,CAAqBX,OAAQ,0DACRC,KAAMW,QCCtBW,EApBC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACzBC,qBAAU,WACRD,MACC,IAEH,IAAIE,EAAcH,EAAQI,KAAI,SAACC,GAAD,OAAe,kBAAC,EAAD,CAAYpB,SAAUoB,EAAQpB,SAClBD,OAAQqB,EAAQC,GAChBpB,eAAgBmB,EAAQnB,eACxBC,uBAAwBkB,EAAQlB,uBAChCC,qBAAsBiB,EAAQjB,qBAC9BC,iBAAkBgB,EAAQhB,iBAC1BC,OAAQe,EAAQf,YAEzE,OACE,yBAAKZ,UAAWC,IAAM4B,kBACnBJ,I,sDCfHK,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,QCJNX,ECYAa,aFLiB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAIC,KAAKhC,MAAM2B,OAER,kBAACG,EAAcE,KAAKhC,OAFG,kBAAC,IAAD,CAAUU,GAAG,uBAHF,GACbuB,IAAMH,WAUtC,OAFqCI,YAAQT,EAARS,CAAoCH,KEFpDG,aAVD,SAACR,GACrB,MAAO,CACCN,YAAaM,EAAMS,YAAYf,YAC/BgB,SAAUV,EAAMS,YAAYC,SAC5BT,OAAQD,EAAME,KAAKD,OACnBV,QAASS,EAAMS,YAAYlB,WAKW,CAACoB,uBAAoBnB,iBAFtDW,CAGSb,GCfTsB","file":"static/js/6.ae20dcb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__3o0Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItemContainer\":\"DialogItem_dialogItemContainer__17CwA\",\"userImg\":\"DialogItem_userImg__tfvG5\",\"dialogLink\":\"DialogItem_dialogLink__3azcN\",\"containerInfo\":\"DialogItem_containerInfo__22ArO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogueInformation_container__11aPr\",\"header\":\"DialogueInformation_header__2lciR\",\"information\":\"DialogueInformation_information__37-Wr\"};","import DialogueInformation from \"./DialogueInformation\";\nexport default DialogueInformation;","import React from \"react\";\nimport style from \"./DialogueInformation.module.scss\";\n\nconst DialogueInformation = ({header, info}) => {\n\n    return (<div className={style.container}>\n             <span className={style.header}>{header} </span> <span className={style.information}>{info || 0}</span>\n           </div>)\n}\n\nexport default DialogueInformation;","import DialogItem from \"./DialogItem\";\nexport default DialogItem;","import React from \"react\";\nimport style from \"./DialogItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogueInformation from \"../DialogueInformation\";\n\nconst DialogItem = (props) => {\n  const {userId, userName, hasNewMessages, lastDialogActivityDate, lastUserActivityDate, newMessagesCount, photos} = props;\n\n  let path = \"/messages/\" + userId;\n\n  return (\n    <div className={style.dialogItemContainer}>\n      <NavLink to={path} className={style.dialogLink}>\n        <img className={style.userImg} src={photos.small} />\n        <p>{userName}</p>\n        <div className={style.containerInfo}>\n          <DialogueInformation header={'Новых сообщений'}\n                               info={newMessagesCount} />\n          <DialogueInformation header={'Есть новые сообщения'}\n                               info={hasNewMessages} />\n          <DialogueInformation header={'Последнее сообщение'}\n                               info={lastDialogActivityDate} />\n          <DialogueInformation header={'Был онлайн'}\n                               info={lastUserActivityDate} />\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nDialogItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default DialogItem;\n","import React, { useEffect } from \"react\";\nimport style from \"./Dialogs.module.scss\";\nimport DialogItem from \"../DialogItem\";\n\n\nconst Dialogs = ({dialogs, getDialogs}) => { \n  useEffect(() => {\n    getDialogs();\n  }, []);\n  \n  let dialogsData = dialogs.map((element) => ( <DialogItem userName={element.userName} \n                                                           userId={element.id}\n                                                           hasNewMessages={element.hasNewMessages}\n                                                           lastDialogActivityDate={element.lastDialogActivityDate}\n                                                           lastUserActivityDate={element.lastUserActivityDate}\n                                                           newMessagesCount={element.newMessagesCount}\n                                                           photos={element.photos} />));\n\n  return (\n    <div className={style.dialogsContainer}>\n      {dialogsData}\n    </div>\n  );\n};\n\nexport default Dialogs;","import React from \"react\";\nimport Component from \"react\"\nimport {connect} from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to='/authorization' />\n\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import Dialogs from \"../../components/Dialogs\";\n\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\nimport {onSendMessageClick, getDialogs} from \"../../redux/dialogs-reducer.js\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n          dialogsData: state.dialogsPage.dialogsData,\n          messages: state.dialogsPage.messages,\n          isAuth: state.auth.isAuth,\n          dialogs: state.dialogsPage.dialogs,\n         }\n}\nexport default compose(\n                       withAuthRedirect,\n                       connect(mapStateToProps, {onSendMessageClick, getDialogs})\n                      )(Dialogs);","import DialogsPage from \"./DialogsPage\";\n\nexport default DialogsPage;"],"sourceRoot":""}