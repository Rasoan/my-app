{"version":3,"sources":["components/Profile/Profile.module.scss","components/Preloaders/PreloaderServerUpload/PreloaderServerUpload.jsx","components/Preloaders/PreloaderServerUpload/index.js","components/ButtonFollowUnfollow/ButtonFollowUnfollow.module.scss","../node_modules/classnames/index.js","components/ButtonFollowUnfollow/ButtonFollowUnfollow.jsx","components/ButtonFollowUnfollow/index.js","components/Profile/ProfileDescription/ProfileDescriptionEditMode.jsx","components/Profile/ProfileDescription/ProfileDescriptionViewMode.jsx","components/Profile/ProfileDescription/index.js","components/Profile/Status/Status.jsx","components/Profile/Status/index.js","components/Profile/ProfilePicture/ProfilePicture.jsx","components/Profile/ProfilePicture/index.js","components/Profile/Posts/Post.jsx","components/Profile/Posts/PostForm.jsx","components/Profile/Posts/index.js","components/ButtonStartCommunication/index.js","components/ButtonStartCommunication/ButtonStartCommunication.jsx","components/Profile/Profile.jsx","components/Profile/index.js","pages/ProfilePage/ProfilePage.jsx","pages/ProfilePage/index.js"],"names":["module","exports","PreloaderServerUpload","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","ButtonFollowUnfollow","props","friend","follow","unfollow","userId","text","styleButton","style","notFriend","onClickButton","onClick","className","defaultProps","ProfileDataForm","handleProfile","profile","useForm","defaultValues","register","handleSubmit","onSubmit","ProfileInfoContainer","type","keys","contacts","map","pattern","RegExp","ProfileDescriptionViewMode","setEditMode","controlPanels","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","actionCreators","saveProfile","connect","state","profilePage","app","useState","editMode","formData","a","ProfileDescriptionEditMode","initialValues","Status","activateEditMode","deActivateEditModeEnterOrEsc","onStatusChange","deActivateEditMode","statusText","statusTextStyle","statusTextContainer","inputStatusText","onFocus","event","target","select","onKeyDown","e","onBlur","onChange","value","autoFocus","compose","statusGlobalState","defaultStatusText","updateNewStatusText","statusCopy","setStatusCopy","status","setStatus","useEffect","keyCode","statusInputText","ProfilePicture","photos","fileInputRef","profilePictureContainer","image","src","large","alt","profilePictureUpload","profilePictureUploadBlock","ref","React","createRef","updateProfilePicture","isFetching","preventDefault","current","Post","content","countLikes","imgSrc","PostContainer","PostContentImg","postImage","width","height","PostCountLikes","PostForm","addPost","placeholder","posts","post","postData","ButtonStartCommunication","startCommunication","Profile","isAuth","ProfileContainer","pictureAndDescriptionContainer","ProfileDescription","Posts","getProfile","lookingMyProfile","notLookingMyProfile","getStatus","checkUserOrOwner","myId","auth","logoutFetching","refreshRequests","withRouter","match","params","ProfilePage"],"mappings":"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","file":"static/js/4.bba17175.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__2uJ-p\",\"pictureAndDescriptionContainer\":\"Profile_pictureAndDescriptionContainer__OqIeT\",\"image\":\"Profile_image__2cSDu\",\"profilePictureContainer\":\"Profile_profilePictureContainer__3RozW\",\"profilePictureUpload\":\"Profile_profilePictureUpload__V9HkJ\",\"profilePictureUploadBlock\":\"Profile_profilePictureUploadBlock__3nDth\",\"PostContainer\":\"Profile_PostContainer__NS4BS\",\"PostContentImg\":\"Profile_PostContentImg__3FRUD\",\"PostCountLikes\":\"Profile_PostCountLikes__3iyrd\",\"postImage\":\"Profile_postImage__3_T2L\",\"statusTextContainer\":\"Profile_statusTextContainer__2cJI1\",\"statusText\":\"Profile_statusText__Fdqfq\",\"inputStatusText\":\"Profile_inputStatusText__2RZfv\"};","import React from \"react\";\n\nconst PreloaderServerUpload = () => {\n  return (<div>\n            <h2>Идёт запрос на сервер!</h2>\n          </div>\n          );\n};\n\nexport default PreloaderServerUpload;\n","import PreloaderServerUpload from \"./PreloaderServerUpload\"\nexport default PreloaderServerUpload;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"ButtonFollowUnfollow_friend__1wpfo\",\"notFriend\":\"ButtonFollowUnfollow_notFriend__3iQnm\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport style from \"./ButtonFollowUnfollow.module.scss\";\nimport classNames from 'classnames';\n\n\nconst ButtonFollowUnfollow = (props) => {\n  const {friend, follow, unfollow, userId} = props;\n\n  const text = friend ? \"Удалить из друзей\": \"Добавить в друзья\";\n  const styleButton = classNames({ [style.friend]: friend }, { [style.notFriend]: !friend });\n  const onClickButton = friend ? unfollow: follow;\n  return (<button onClick={() => onClickButton(userId)} className={styleButton}>\n            {text}\n          </button>);\n};\n\nButtonFollowUnfollow.propTypes = {\n  userId: PropTypes.number,\n  follow: PropTypes.func.isRequired,\n  unfollow: PropTypes.func.isRequired,\n};\n\nButtonFollowUnfollow.defaultProps = {\n  friend: false,\n}\n\nexport default ButtonFollowUnfollow;","import ButtonFollowUnfollow from \"./ButtonFollowUnfollow\";\nexport default ButtonFollowUnfollow;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"../Profile.module.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  const {handleProfile, profile} = props;\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {...profile},\r\n  });\r\n\r\n  return (<form onSubmit={handleSubmit(handleProfile)} className={style.ProfileInfoContainer}>\r\n            <button>Сохранить</button>\r\n            <div>\r\n              <b>Fullname</b>\r\n              <input type=\"text\" {...register(\"fullName\")} />\r\n            </div>\r\n            <div>\r\n              <p><b>Looking for a job</b></p>\r\n              <input type=\"checkbox\" {...register(\"lookingForAJob\")} />\r\n            </div>\r\n            <div>\r\n              <p><b>Looking for a job Description</b></p>\r\n              <textarea {...register(\"lookingForAJobDescription\")} />\r\n            </div>\r\n            <div>\r\n              <p><b>About me:</b></p>\r\n              <textarea {...register(\"aboutMe\")} />\r\n            </div>\r\n            <div>\r\n              <p><b>Contacts:</b> <ul>{Object.keys(profile.contacts).map(key => {\r\n                return <li key={key}>\r\n                          <p><b>{key}</b></p>\r\n                          <input {...register(`contacts.${key}`, {pattern: new RegExp(\"[http]\")})} />\r\n                       </li>\r\n              })}</ul></p>\r\n            </div>\r\n          </form>);\r\n}\r\n\r\nProfileDataForm.propTypes = {\r\n  handleProfile: PropTypes.func,\r\n  profile: PropTypes.object,\r\n}\r\n\r\nexport default ProfileDataForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"../Profile.module.scss\";\r\n\r\nconst ProfileDescriptionViewMode = (props) => {\r\n    const {profile, setEditMode, controlPanels} = props;\r\n\r\n    return (<div className={style.ProfileInfoContainer}>\r\n              {controlPanels && <button onClick={() => setEditMode(true)}>Редактировать</button>}\r\n              <div>\r\n                <p><b>Fullname:</b> {profile.fullName}</p>\r\n                <p><b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\": \"No\"}</p>\r\n              </div>\r\n              {profile.lookingForAJob && \r\n              <div>\r\n                <p>{profile.lookingForAJobDescription}</p>\r\n              </div>}\r\n              <div>\r\n                <p><b>About me:</b> {profile.aboutMe}</p>\r\n              </div>\r\n              <div>\r\n                <b>Contacts:</b> <ul>{profile?.contacts && Object.keys(profile.contacts).map((key, i) => {\r\n                  return <li key={i + key}>\r\n                            <b>{key}:</b> {profile.contacts[key]}\r\n                         </li>\r\n                })}</ul>\r\n              </div>\r\n            </div>\r\n);}\r\n\r\nProfileDescriptionViewMode.propTypes = {\r\n  profile: PropTypes.object,\r\n  toggleSetEditMode: PropTypes.func,\r\n  controlPanels: PropTypes.bool,\r\n}\r\n\r\nexport default ProfileDescriptionViewMode;","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {saveProfile} from \"../../../redux/profile-reducer\";\nimport ProfileDescriptionEditMode from \"./ProfileDescriptionEditMode\";\nimport ProfileDescriptionViewMode from \"./ProfileDescriptionViewMode\";\n\nconst ProfileDescriptionContainer = (props) => {\n  const {profile, saveProfile, controlPanels} = props;\n\n  const [editMode, setEditMode] = useState(false);\n  \n  const onSubmit = async (formData) => {\n    await saveProfile(formData);\n    setEditMode(false);\n  }\n\n  return (\n  <>\n    {editMode ? <ProfileDescriptionEditMode handleProfile={onSubmit}\n                                            profile={profile}\n                                            initialValues={profile} />: \n                <ProfileDescriptionViewMode profile={profile}\n                                            setEditMode={setEditMode}\n                                            controlPanels={controlPanels} />}\n  </>\n);}\n\nProfileDescriptionContainer.propTypes = {\n  profile: PropTypes.object,\n  saveProfile: PropTypes.func,\n  controlPanels: PropTypes.bool,\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    controlPanels: state.app.controlPanels,\n});\n\nconst actionCreators = {saveProfile};\n\nexport default connect(mapStateToProps, actionCreators)(ProfileDescriptionContainer);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../Profile.module.scss\";\n\nconst Status = (props) => {\n  const {controlPanels, activateEditMode, editMode, \n         deActivateEditModeEnterOrEsc, onStatusChange, \n         deActivateEditMode, statusText} = props;\n         \n  let statusTextStyle = controlPanels ? style.statusText: \"\";\n  \n  return <div className={style.statusTextContainer}>\n           {editMode && <input className={style.inputStatusText}\n                               onFocus={(event) => event.target.select()}\n                               onKeyDown={(e) => deActivateEditModeEnterOrEsc(e)}\n                               onBlur={deActivateEditMode}\n                               onChange={(e) => onStatusChange(e.target.value)} \n                               type=\"text\"\n                               autoFocus={true}\n                               value={statusText} />}\n           {!editMode && <span className={statusTextStyle} \n                               onClick={controlPanels ? activateEditMode: ()=>{}}>{statusText}</span>}            \n         </div>\n};\n\nStatus.propTypes = {\n  controlPanels: PropTypes.bool,\n  activateEditMode: PropTypes.func,\n  editMode: PropTypes.bool,\n  deActivateEditModeEnterOrEsc: PropTypes.func,\n  onStatusChange: PropTypes.func,\n  deActivateEditMode: PropTypes.func,\n  statusText: PropTypes.string,\n}\n\nexport default Status;","import React, {useState, useEffect} from \"react\";\nimport Status from \"./Status\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport {updateNewStatusText} from \"../../../redux/profile-reducer\";\n\nconst StatusContainer = ({defaultStatusText, statusGlobalState, updateNewStatusText, controlPanels}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [statusCopy, setStatusCopy] = useState(statusGlobalState);\n  const [status, setStatus] = useState(statusGlobalState);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  \n  const deActivateEditMode = () => {\n    setEditMode(false);\n    let statusTemporaryVariable = status !== \"\" ? status: defaultStatusText;\n    updateNewStatusText(statusTemporaryVariable);\n    if (status === \"\") {\n      setStatus(defaultStatusText);\n      setStatusCopy(defaultStatusText);\n    }\n  }\n\n  const onStatusChange = (statusInputText) => {\n    setStatus(statusInputText);\n  }\n\n  const deActivateEditModeEnterOrEsc = (e) => {\n    if (e.keyCode === 13) { // если клавиша Enter\n      setEditMode(false);\n      let statusTemporaryVariable = status !== \"\" ? status: defaultStatusText;\n      updateNewStatusText(statusTemporaryVariable);\n      if (status === \"\") {\n        setStatus(defaultStatusText);\n        setStatusCopy(defaultStatusText);\n      }\n    }\n\n    if (e.keyCode === 27) { // если клавиша esc\n      setEditMode(false);\n      setStatus(statusCopy);\n    }\n  }\n\n  useEffect(() => {\n    setStatus(statusGlobalState);\n    setStatusCopy(statusGlobalState);\n  }, [statusGlobalState]);\n\n  return <Status editMode={editMode}\n                 activateEditMode={activateEditMode} \n                 deActivateEditMode={deActivateEditMode}\n                 deActivateEditModeEnterOrEsc={deActivateEditModeEnterOrEsc}\n                 onStatusChange={onStatusChange} \n                 statusText={status} \n                 controlPanels={controlPanels}/>\n}\n\nlet mapStateToProps = (state) => ({\n  statusGlobalState: state.profilePage.statusText,\n  defaultStatusText: state.profilePage.defaultStatusText,\n  controlPanels: state.app.controlPanels,\n});\n\nexport default compose(\n                       connect(mapStateToProps, {updateNewStatusText})\n                      )(StatusContainer);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../Profile.module.scss\";\n\nconst ProfilePicture = (props) => {\n  const {photos, onSubmit, fileInputRef, controlPanels} = props;\n\n  return (\n    <div className={style.profilePictureContainer}>\n      <img className={style.image}\n           src={photos?.large}\n           alt={\"user\"}/>\n      {controlPanels && <form onSubmit={onSubmit} className={style.profilePictureUpload}>\n         <div className={style.profilePictureUploadBlock}>\n          <input type=\"file\" ref={fileInputRef} />\n          <button type=\"submit\">Загрузить файл</button>\n        </div>\n      </form>}    \n    </div>\n  );\n};\n\nProfilePicture.propTypes = {\n  photos: PropTypes.object,\n  onSubmit: PropTypes.func,\n  fileInputRef: PropTypes.object,\n  controlPanels: PropTypes.bool,\n}\n\nexport default ProfilePicture;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfilePicture from \"./ProfilePicture\";\nimport {connect} from \"react-redux\";\nimport {updateProfilePicture} from \"../../../redux/profile-reducer\";\nconst fileInputRef = React.createRef();\n\nconst ProfilePictureContainer = (props) => {\n  const {photos, updateProfilePicture, fileInputRef, controlPanels} = props;\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    updateProfilePicture(fileInputRef.current);\n  }\n  \n  return <ProfilePicture photos={photos} \n                         onSubmit={onSubmit}\n                         fileInputRef={fileInputRef}\n                         controlPanels={controlPanels} />;\n};\n\nProfilePictureContainer.propTypes = {\n  photos: PropTypes.object,\n  updateProfilePicture: PropTypes.func,\n  fileInputRef: PropTypes.object,\n  controlPanels: PropTypes.bool,\n}\n\nlet mapStateToProps = (state) => (\n    {\n      photos: state.profilePage.profile.photos,\n      isFetching: state.profilePage.isFetching,\n      fileInputRef: fileInputRef,\n      controlPanels: state.app.controlPanels,\n    }\n  )\n\nconst actionCreators = {updateProfilePicture};\n  \nexport default connect(mapStateToProps,actionCreators)(ProfilePictureContainer);","import React from \"react\";\nimport style from \"../Profile.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Post = (props) => {\n  const {content, countLikes, imgSrc} = props;\n  \n  return (\n    <div className={style.PostContainer}>\n      <div className={style.PostContentImg}>\n        <img className={style.postImage}\n             width=\"50\"\n             height=\"50\"\n             alt=\"user\"\n             src={imgSrc} />\n        <p>{content}</p>\n      </div>\n      <p className={style.PostCountLikes}>{countLikes}</p>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  content: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  countLikes: PropTypes.string.isRequired,\n};\n\nexport default Post;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\n\nconst PostForm = (props) => {\n  const {addPost} = props;\n\n  const { register, handleSubmit } = useForm();\n  return (\n    <form onSubmit={handleSubmit(addPost)}>\n      <div>\n        <textarea placeholder=\"Введите ваше пост\"\n                  {...register(\"post\")} />\n      </div>\n      <button>Отправить сообщение</button>\n    </form>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func,\n}\n\nexport default PostForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./Post\";\nimport {addPost} from '../../../redux/profile-reducer.js';\nimport {connect} from \"react-redux\";\nimport PostForm from \"./PostForm\";\n\nconst PostsContainer = (props) => {\n  let {posts, addPost} = props;\n\n  posts =  posts.map((post, i) => <Post key={post.content + i}\n                                        content={post.content} \n                                        imgSrc={post.imgSrc} \n                                        countLikes={post.countLikes} />);\n  \n  addPost = (postData) => {\n    props.addPost(postData.post);\n  }\n  return (\n    <div>\n      <h3>My posts</h3>\n      {posts}\n      <PostForm addPost={addPost} />\n    </div>\n);}\n\nPostsContainer.propTypes = {\n  posts: PropTypes.array,\n  addPost: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => {\n  return {\n          posts: state.profilePage.posts,\n         }\n}\n\nconst actionCreators = {addPost};\n\nexport default connect(mapStateToProps, actionCreators)(PostsContainer);","import ButtonStartCommunication from \"./ButtonStartCommunication\";\nexport default ButtonStartCommunication;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonStartCommunication = (props) => {\n  const {startCommunication, userId} = props;\n\n  return (<button onClick={() => startCommunication(userId)}>\n            Начать диалог\n          </button>);\n};\n\nButtonStartCommunication.propTypes = {\n  startCommunication: PropTypes.func.isRequired,\n  userId: PropTypes.number,\n};\n\nexport default ButtonStartCommunication;","import React from \"react\";\nimport style from \"./Profile.module.scss\";\nimport PropTypes from \"prop-types\";\nimport PreloaderServerUpload from '../Preloaders/PreloaderServerUpload';\nimport ProfileDescription from \"./ProfileDescription\";\nimport Status from \"./Status\";\nimport ProfilePicture from \"./ProfilePicture\";\nimport Posts from \"./Posts\";\nimport ButtonFollowUnfollow from \"../ButtonFollowUnfollow\";\nimport ButtonStartCommunication from \"../ButtonStartCommunication\";\n      \nconst Profile = (props) => {\n  const {profile, isFetching, follow, unfollow, startCommunication, controlPanels, isAuth} = props;\n\n  if (isFetching) return (<PreloaderServerUpload/>);\n  if (!profile) return <></> \n  \n  return (\n    <div className={style.ProfileContainer}>\n      <div className={style.pictureAndDescriptionContainer}>\n        <ProfilePicture />\n        <ProfileDescription />\n      </div>\n      <Status /> \n      {!controlPanels && isAuth && <ButtonFollowUnfollow follow={follow}\n                                                         unfollow={unfollow}\n                                                         friend={\"\"}\n                                                         userId={profile.userId} />}\n      {!controlPanels && isAuth && <ButtonStartCommunication startCommunication={startCommunication}\n                                                             userId={profile.userId} />}\n      <Posts profile={profile} />\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  follow: PropTypes.func.isRequired,\n  unfollow: PropTypes.func.isRequired,\n  startCommunication: PropTypes.func.isRequired,\n  controlPanels: PropTypes.bool.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n}\n\nexport default Profile;","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Profile from \"../Profile/Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, lookingMyProfile, notLookingMyProfile, getStatus} from \"../../redux/profile-reducer\";\nimport {follow, unfollow} from \"../../redux/users-reducer\"\nimport {checkUserOrOwner} from \"../../redux/app-reducer\";\nimport {startCommunication} from \"../../redux/dialogs-reducer\"\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n    const {\n        myId, match, profile, getProfile, getStatus,\n        checkUserOrOwner, follow, unfollow,\n        startCommunication, controlPanels,\n        refreshRequests, isAuth} = props;\n\n    useEffect(() => {\n        getProfile(match.params.userId);\n        getStatus(match.params.userId);\n        checkUserOrOwner(match.params.userId);\n    }, [myId, refreshRequests, getProfile, getStatus, checkUserOrOwner, match.params.userId]);\n\n    return (<Profile {...props} profile={profile}\n                     follow={follow}\n                     unfollow={unfollow}\n                     startCommunication={startCommunication}\n                     controlPanels={controlPanels}\n                     isAuth={isAuth}/>);\n};\n\nProfileContainer.propTypes = {\n    myId: PropTypes.number,\n    match: PropTypes.object,\n    profile: PropTypes.object,\n    getProfile: PropTypes.func,\n    getStatus: PropTypes.func,\n    checkUserOrOwner: PropTypes.func,\n    follow: PropTypes.func,\n    unfollow: PropTypes.func,\n    startCommunication: PropTypes.func,\n    controlPanels: PropTypes.bool,\n    isAuth: PropTypes.bool,\n    refreshPage: PropTypes.bool,\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    isFetching: state.profilePage.isFetching,\n    myId: state.auth.userId,\n    logoutFetching: state.auth.logoutFetching,\n    controlPanels: state.app.controlPanels,\n    isAuth: state.auth.isAuth,\n    refreshRequests: state.app.refreshRequests,\n});\n\nconst actionCreators = {\n    getProfile,\n    lookingMyProfile,\n    notLookingMyProfile,\n    getStatus,\n    checkUserOrOwner,\n    follow,\n    unfollow,\n    startCommunication,\n}\n\nexport default compose(connect(mapStateToProps, actionCreators), withRouter)(ProfileContainer);","import Profile from \"../../components/Profile\";\nexport default Profile;","import ProfilePage from \"./ProfilePage\";\nexport default ProfilePage;"],"sourceRoot":""}