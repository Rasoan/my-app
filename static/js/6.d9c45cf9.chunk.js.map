{"version":3,"sources":["components/Messages/Messages.jsx","components/Messages/index.js","components/MessageForm/MessageForm.jsx","components/MessageForm/index.js","pages/MessagesPage/MessagesPage.jsx","pages/MessagesPage/index.js"],"names":["Messages","props","messages","totalCount","messagesElement","map","message","actionCreators","getMessages","connect","state","messagesPage","userId","useEffect","MessageForm","handleSendMessage","validationSchema","Yup","shape","required","max","useForm","mode","resolver","yupResolver","register","formState","handleSubmit","errors","touchedFields","onSubmit","className","style","inCorrect","login","correct","sendMessage","dialogsPage","items","data","MessagesPage","match","params"],"mappings":"0KAkBeA,EAfE,SAACC,GAAW,IACpBC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,WACXC,EAAkBF,EAASG,KAAI,SAAAC,GAAO,OAAI,8BAAOA,MAEvD,OAAQ,6BACGF,EACD,yHAA8B,2BAAID,KCmBxCI,EAAiB,CAACC,iBAETC,eAPS,SAACC,GAAD,MAAY,CAClCR,SAAUQ,EAAMC,aAAaT,SAC7BC,WAAYO,EAAMC,aAAaR,cAKOI,EAAzBE,EAxBW,SAACR,GAAW,IAC7BW,EAA6CX,EAA7CW,OAAQV,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,WAAYK,EAAeP,EAAfO,YAKrC,OAJAK,qBAAU,WACRL,EAAYI,KACZ,CAACA,EAAQJ,IAEH,kBAAC,EAAD,CAAUN,SAAUA,EACVC,WAAYA,O,4CC2BjBW,EAhCK,SAACb,GAAW,IACvBc,EAAqBd,EAArBc,kBACDC,EAAmBC,MAAaC,MAAM,CAC1CZ,QAASW,MACIE,SAAS,4LACTC,IAAI,IAAK,2GALK,EAQiBC,YAAQ,CAClDC,KAAM,SACNC,SAAUC,YAAYR,KAFlBS,EARqB,EAQrBA,SAAUC,EARW,EAQXA,UAAWC,EARA,EAQAA,aAKtBC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,cAGb,OACI,0BAAMC,SAAUH,EAAaZ,IAC3B,6BACE,4CAAUgB,UAAYH,EAAOtB,SAAW0B,IAAMC,WAAeJ,EAAcK,OAASF,IAAMG,SAC5EV,EAAS,aACZG,EAAOtB,SAAW,2BAAIsB,EAAOtB,QAAQA,UAElD,mJCLJC,EAAiB,CACrBC,gBACA4B,iBAGa3B,eAVS,SAACC,GAAD,MAAY,CAClCR,SAAUQ,EAAM2B,YAAYnC,SAASoC,MACrCnC,WAAYO,EAAM2B,YAAYnC,SAASC,cAQDI,EAAzBE,EAzBc,SAACR,GAAW,IAChCW,EAAuBX,EAAvBW,OAAQwB,EAAenC,EAAfmC,YAMf,OAAQ,kBAAC,EAAD,CAAarB,kBAJK,SAACwB,GACzBH,EAAYxB,EAAQ2B,EAAKjC,eCQdkC,EAbM,SAACvC,GAAW,IACxBwC,EAASxC,EAATwC,MAEP,OAAQ,6BACG,kBAAC,EAAD,CAAU7B,OAAQ6B,EAAMC,OAAO9B,SAC/B,kBAAC,EAAD,CAAaA,OAAQ6B,EAAMC,OAAO9B,WCThC4B","file":"static/js/6.d9c45cf9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Messages = (props) => {\n  const {messages, totalCount} = props;\n  const messagesElement = messages.map(message => <span>{message}</span>);\n  \n  return (<div>\n            {messagesElement}\n            <span>Всего сообщений: </span><b>{totalCount}</b>\n          </div>);\n};\n\nMessages.propTypes = {\n  messages: PropTypes.array.isRequired,\n  totalCount: PropTypes.number.isRequired,\n}\n\nexport default Messages;\n","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getMessages} from \"../../redux/messages-reducer\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./Messages\";\n\nconst MessagesContainer = (props) => {\n  const {userId, messages, totalCount, getMessages} = props;\n  useEffect(() => {\n    getMessages(userId);\n  },[userId, getMessages]);\n  \n  return (<Messages messages={messages}\n                    totalCount={totalCount} />)\n}\n\nMessagesContainer.propTypes = {\n  userId: PropTypes.string.isRequired,\n  messages: PropTypes.array.isRequired,\n  totalCount: PropTypes.number.isRequired,\n  getMessages: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.messagesPage.messages,\n  totalCount: state.messagesPage.totalCount,\n});\n\nconst actionCreators = {getMessages,};\n  \nexport default connect(mapStateToProps, actionCreators)(MessagesContainer);","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport style from \"./MessageForm.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n\nconst MessageForm = (props) => {\n  const {handleSendMessage} = props;\n  const validationSchema = Yup.object().shape({\n    message: Yup.string()\n                .required('Нельзя отправить пустое сообщение!')\n                .max(100, 'Максимум 100 символов'),\n  });\n\n  const { register, formState, handleSubmit } = useForm({\n      mode: 'onBlur',\n      resolver: yupResolver(validationSchema)\n  });\n\n  const {errors, touchedFields} = formState;\n\n\n    return (\n        <form onSubmit={handleSubmit(handleSendMessage)}>\n          <div>\n            <textarea className={(errors.message && style.inCorrect) || (touchedFields.login && style.correct)}\n                      {...register(\"message\")} />\n                      {errors.message && <p>{errors.message.message}</p>}\n          </div>\n          <button>Отправить сообщение</button>\n        </form>\n      );\n}\n\nMessageForm.propTypes = {\n  handleSendMessage: PropTypes.func.isRequired,\n}\n\nexport default MessageForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getMessages, sendMessage} from \"../../redux/messages-reducer\";\nimport { connect } from \"react-redux\";\nimport MessageForm from \"./MessageForm\";\n\nconst MessageFormContainer = (props) => {\n  const {userId, sendMessage} = props;\n\n  const handleSendMessage = (data) => {\n    sendMessage(userId, data.message);\n  }\n\n  return (<MessageForm handleSendMessage={handleSendMessage} />)\n}\n\nMessageFormContainer.propTypes = {\n  userId: PropTypes.string.isRequired,\n  sendMessage: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.dialogsPage.messages.items,\n  totalCount: state.dialogsPage.messages.totalCount,\n})\n\nconst actionCreators = {\n  getMessages,\n  sendMessage,\n}\n\nexport default connect(mapStateToProps, actionCreators)(MessageFormContainer);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Messages from \"../../components/Messages\";\nimport MessageForm from \"../../components/MessageForm\";\n\nconst MessagesPage = (props) => {\n  const {match} = props;\n  \n  return (<div>\n             <Messages userId={match.params.userId} />\n             <MessageForm userId={match.params.userId} />\n           </div>)\n}\n\nMessagesPage.propTypes = {\n  match: PropTypes.object,\n}\n\nexport default MessagesPage;","import MessagesPage from \"./MessagesPage\";\nexport default MessagesPage;"],"sourceRoot":""}