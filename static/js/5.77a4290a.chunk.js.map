{"version":3,"sources":["components/Preloader/PreloaderServerUpload.jsx","components/Users/UserItem/UserItem.module.scss","../node_modules/classnames/index.js","components/Pagination/Pagination.module.scss","components/Users/UserItem/UserItem.jsx","components/Pagination/Pagination.jsx","components/Users/UsersList/UsersList.jsx","../node_modules/reselect/es/index.js","redux/users-selectors.js","components/Users/UsersList/UsersListContainer.jsx","components/Users/index.js","pages/UsersPage/UsersPage.jsx","pages/UsersPage/index.js"],"names":["PreloaderServerUpload","props","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","require","UserItem","followed","follow","unfollow","isFetchingFollowOrUnfollowIdList","photo","name","defaultAvatarSrc","id","navlinkTo","isAuth","startCommunication","buttonText","styleButton","style","deleteFriendButton","addFriendButton","isFetching","some","element","avatarSrc","className","UserItemContainer","to","src","onClick","Pagination","listPageNumbers","countCardsInPage","getCards","loading","loadingStyle","useState","currentPageNumber","setCurrentPageNumber","pageNumbers","map","pageNumber","pageNumberContainer","onPageChanged","button","currentPage","disabled","pageNumberListContainer","UsersList","totalUsersCount","pagesSize","setCurrentPage","users","getUsers","countPage","Math","ceil","pages","user","photos","small","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","getDependencies","funcs","dependencies","every","dep","dependencyTypes","Error","createSelector","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","state","usersPage","getPagesSize","getTotalUsersCount","getIsFetching","getIsFetchingFollowOrUnfollowIdList","getIsAuth","auth","getDefaultAvatarSrc","UsersListContainer","this","getUsersSC","React","Component","connect","Users","console","log","UsersContainer","UsersPage"],"mappings":"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","file":"static/js/5.77a4290a.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Preloaders.module.scss\";\n\nconst PreloaderServerUpload = (props) => {\n  return (<div>\n            <h2>Идёт запрос на сервер!</h2>\n          </div>\n          );\n};\n\nexport default PreloaderServerUpload;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserItemContainer\":\"UserItem_UserItemContainer__2a60J\",\"photo\":\"UserItem_photo__A9lPe\",\"name\":\"UserItem_name__3Hp0u\",\"deleteFriendButton\":\"UserItem_deleteFriendButton__1QdBv\",\"addFriendButton\":\"UserItem_addFriendButton__1Yef1\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Pagination_currentPage__2JXqN\",\"pageNumberListContainer\":\"Pagination_pageNumberListContainer__1cHI3\",\"pageNumberContainer\":\"Pagination_pageNumberContainer__3HSkW\",\"button\":\"Pagination_button__hHvcW\",\"loadingStyle\":\"Pagination_loadingStyle__mxq0N\"};","import React from \"react\";\nimport style from \"./UserItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport {NavLink} from \"react-router-dom\";\nimport PreloaderServerUpload from \"../../Preloader/PreloaderServerUpload\";\nlet classNames = require('classnames');\n\nconst UserItem = ({followed, follow, unfollow, isFetchingFollowOrUnfollowIdList, \n                   photo, name, defaultAvatarSrc, id, navlinkTo, isAuth,\n                   startCommunication}) => {\n  let buttonText = followed ? \"Удалить из друзей\": \"Добавить в друзья\";\n  let styleButton =  classNames({ [style.deleteFriendButton]: followed }, { [style.addFriendButton]: !followed });\n  let isFetching = isFetchingFollowOrUnfollowIdList.some(element => element === id) ? <PreloaderServerUpload /> : null;\n  let avatarSrc = photo ? photo: defaultAvatarSrc;\n  return (\n            <div className={style.UserItemContainer}>\n              <NavLink to={navlinkTo}>\n                <img className={style.photo} src={avatarSrc} />\n                <p className={style.name}>{name}</p>\n              </NavLink>\n              <div>\n                <p>{\"\"}</p>\n                <p>{\"\"}</p>\n                {isFetching || isAuth && <button onClick={() => {\n                  if (!followed) {\n                    follow(id);\n                  }\n\n                  if (followed) {\n                    unfollow(id);\n                  }\n                }\n                } className={styleButton}>{buttonText}</button>}\n                <button onClick={() => startCommunication(id)}>Начать диалог</button>\n              </div>\n            </div>\n          \n          );\n};\n\nexport default UserItem;\n","import React, {useState} from \"react\";\nimport style from \"./Pagination.module.scss\";\n\nconst Pagination = ({listPageNumbers, countCardsInPage, getCards, loading}) => {\n  let loadingStyle = loading ? style.loadingStyle: \"\";\n  let onPageChanged = (pageNumber, countCardsInPage) => {\n    setCurrentPageNumber(pageNumber);\n    getCards(pageNumber, countCardsInPage);\n  }\n  const [currentPageNumber, setCurrentPageNumber] = useState(1); // переменная одинаковая X\n  let pageNumbers = listPageNumbers\n                    .map(pageNumber => {\n                      return <li className={style.pageNumberContainer}>\n                               <button onClick={() => {\n                                                       if (!loading) onPageChanged(pageNumber, countCardsInPage)\n                                                      }\n                                               } \n                                       className={`${style.button} ${currentPageNumber === pageNumber && style.currentPage}`}\n                                       disabled={loading}>\n                                 {pageNumber}\n                               </button>\n                             </li>\n                                    }\n                                );\n\n\n  return (<ul className={`${loadingStyle} ${style.pageNumberListContainer}`}>{pageNumbers}</ul>);\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport style from \"./UsersList.module.scss\";\nimport PropTypes from \"prop-types\";\nimport UserItem from \"../UserItem/UserItem\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport PreloaderServerUpload from \"../../Preloader/PreloaderServerUpload\";\n\n\nlet UsersList = ({totalUsersCount, pagesSize, currentPage, setCurrentPage, \n                  isFetching, users, getUsers, follow, unfollow, \n                  defaultAvatarSrc, isFetchingFollowOrUnfollowIdList, isAuth,\n                  startCommunication}) => {\n  let countPage = Math.ceil(totalUsersCount / pagesSize);\n  let pages = [];\n  for(let i = 1; i <= countPage; i++) {\n    pages.push(i);\n  }\n\n    return (<>\n               <Pagination listPageNumbers={pages}\n                           countCardsInPage={pagesSize} \n                           loading={isFetching}\n                           getCards={getUsers} />\n               {isFetching ? <PreloaderServerUpload /> : null}\n               {!isFetching && users.map((user) => <UserItem navlinkTo={\"/Profile/\" + user.id}\n                                                                         id={user.id} \n                                                                         photo={user.photos.small}\n                                                                         name={user.name}\n                                                                         followed={user.followed}\n                                                                         isFetchingFollowOrUnfollowIdList={isFetchingFollowOrUnfollowIdList}\n                                                                         follow={follow} \n                                                                         unfollow={unfollow}\n                                                                         defaultAvatarSrc={defaultAvatarSrc} \n                                                                         isAuth={isAuth}\n                                                                         startCommunication={startCommunication} />)}\n           </>);        \n}\n\nUsersList.propTypes = {\n  // message: PropTypes.string.isRequired,\n};\n\nexport default UsersList;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n  return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users;\n});\nexport const getPagesSize = (state) => {\n  return state.usersPage.pagesSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPagestate = (state) => {\n  return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching;\n}\n\nexport const getIsFetchingFollowOrUnfollowIdList = (state) => {\n  return state.usersPage.isFetchingFollowOrUnfollowIdList;\n}\n\nexport const getIsAuth = (state) => {\n  return state.auth.isAuth;\n}\n\nexport const getDefaultAvatarSrc = (state) => {\n  return state.usersPage.defaultAvatarSrc;\n}","import React from \"react\";\nimport UsersList from \"./UsersList\";\nimport {connect} from \"react-redux\";\nimport {\n        getUsersSC,\n        unfollow, follow\n       } from '../../../redux/users-reducer';\nimport {getUsers, getPagesSize, getTotalUsersCount, \n        getIsFetching, getIsFetchingFollowOrUnfollowIdList, \n        getIsAuth, getDefaultAvatarSrc} from \"../../../redux/users-selectors\";\nimport {startCommunication} from \"../../../redux/dialogs-reducer\";\n\n\n\nclass UsersListContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsersSC(this.props.currentPage, this.props.pagesSize);\n  }\n  \n  render() {\n\n    return (<UsersList totalUsersCount={this.props.totalUsersCount}\n                       pagesSize={this.props.pagesSize}\n                       users={this.props.users}\n                       isFetching={this.props.isFetching}\n                       isFetchingFollowOrUnfollowIdList={this.props.isFetchingFollowOrUnfollowIdList} \n                       getUsers={this.props.getUsersSC}\n                       follow={this.props.follow} \n                       unfollow={this.props.unfollow} \n                       defaultAvatarSrc={this.props.defaultAvatarSrc}\n                       isAuth={this.props.isAuth}\n                       startCommunication={this.props.startCommunication} />); \n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n          users: getUsers(state),\n          pagesSize: getPagesSize(state),\n          totalUsersCount: getTotalUsersCount(state),\n          isFetching: getIsFetching(state),\n          isFetchingFollowOrUnfollowIdList: getIsFetchingFollowOrUnfollowIdList(state),\n          isAuth: getIsAuth(state),\n          defaultAvatarSrc: getDefaultAvatarSrc(state),\n         }\n}\n\nexport default connect(mapStateToProps,{\n                                        getUsersSC,\n                                        follow,\n                                        unfollow,\n                                        startCommunication,\n                                       }\n                                        )(UsersListContainer);","import React from \"react\";\nimport style from \"./Users.module.scss\";\nimport PropTypes from \"prop-types\";\nimport UsersListContainer from \"./UsersList/UsersListContainer\";\nimport { connect } from \"react-redux\";\nclass Users extends React.Component {\n  render() {\n    if (!this.props.isAuth) {\n      console.log(\"Пользователь анонимный, надо запретить добавлять в друзья и так далее\")\n    }\n    return (\n      <div className={style.UsersContainer}>\n        <UsersListContainer />\n      </div>\n    );\n  };\n}\n\nlet mapStateToProps = (state) => (\n  {\n    isAuth: state.auth.isAuth,\n  }\n)\n\nexport default connect(mapStateToProps, null)(Users);\n","import Users from \"../../components/Users\";\nexport default Users;","import UsersPage from \"./UsersPage\";\n\nexport default UsersPage;"],"sourceRoot":""}