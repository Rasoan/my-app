{"version":3,"sources":["api/api.js","redux/users-reducer.js","components/App/App.module.scss","components/LeftPanel/LeftPanel.module.scss","components/FriendList/FriendList.module.scss","components/Header/Header.module.scss","components/Navigation/Navigation.module.scss","images/avatar.png","images/signIn.png","images/signUp.png","images/logOut.png","constants/Authorization.js","constants/Users.js","components/Navigation/Navigation.jsx","components/Navigation/NavigationContainer.jsx","components/FriendList/Friend/Friend.jsx","components/FriendList/FriendList.jsx","components/FriendList/FriendListContainer.jsx","components/LeftPanel/index.js","components/LeftPanel/LeftPanel.jsx","components/Authorization/AuthorizationPanel/AuthorizationItem/AuthorizationItem.jsx","components/Authorization/AuthorizationPanel/AuthorizationPanel.jsx","redux/auth-reducer.js","components/Authorization/AuthorizationPanel/AuthorizationPanelContainer.jsx","components/Header/index.js","components/Header/Header.jsx","components/Preloader/PreloaderInitializationApplication.jsx","components/Preloader/Preloader.jsx","hoc/withSuspense.js","components/Authorization/AuthorizationPage/AuthorizationForm.jsx","pages/AuthorizationPage/index.js","components/Authorization/index.js","components/App/App.js","redux/redux-store.js","index.js","redux/profile-reducer.js","constants/Profile.js","components/Authorization/AuthorizationPanel/AuthorizationPanel.module.scss","components/common/FormsControls/FormControls.module.scss","redux/app-reducer.js","components/FriendList/Friend/Friend.module.scss","components/Authorization/AuthorizationPanel/AuthorizationItem/AuthorizationItem.module.scss","redux/dialogs-reducer.js","redux/messages-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pagesSize","get","follow","id","post","unfollow","delete","profileAPI","getProfile","getStatus","userId","then","response","updateStatus","status","put","updateProfilePicture","imagefile","formData","FormData","append","files","saveProfile","profile","authAPI","getAuthMe","signIn","email","password","rememberMe","captcha","logOut","getCaptcha","securituAPI","getCaptchaUrl","dialogsAPI","startCommunication","getAllDialogs","messagesAPI","getMessages","sendMessage","message","messageViewed","messageId","deleteOnlyYouMessage","addMessageSpam","restoreYourMessage","return_messages_newest_than_date","date","getNewMessages","initialState","users","defaultAvatarSrc","DEFAULT_AVATAR_SRC","totalUsersCount","isFetching","isFetchingFollowOrUnfollowIdList","usersReducer","state","action","type","map","u","followed","filter","followAC","unfollowAC","toggleIsFetching","isFetchingFollowOrUnfollowStart","isFetchingFollowOrUnfollowEnd","getUsersSC","dispatch","a","data","items","totalCount","followUnfollow","UsersApiFollowOrUnfollow","actionCreator","resultCode","bind","module","exports","SIGN_IN_IMG","require","SIGN_UP_IMG","LOG_OUT_IMG","DEFAULT_USER_ID","Navigation","clickProfileLink","className","style","NavigationContainer","NavigationContainer__list","NavigationContainer__item","onClick","activeClassName","active","NavigationContainer__link","to","props","isAuth","console","log","this","React","Component","compose","connect","redrawToProfileComponent","profilePage","auth","lookingMyProfile","Friend","srcPhoto","clickProfileUser","name","friendContainer","photo","src","FriendList","friendList","styleContainer","length","container","friends","friend","photos","small","FriendListContainer","notLookingMyProfile","usersPage","user","LeftPanel","leftPanelWrapper","AuthorizationItem","onClickF","srcImg","text","authorizationItem","authorizationImg","alt","width","height","authorizationText","AuthorizationPanel","authorizationInfo","logOutClick","signInOnClick","signUpOnClick","authorizationPanelWrapper","authorizationPanelInfo","infoText","login","authorizationPanel","logoutFetching","captchaUrl","signInImg","signUpImg","logOutImg","authReducer","setUserDataAC","getCaptchaAC","authMe","AuthorizationPanelContainer","getState","Header","HeaderContainer","PreloaderInitializationApplication","Preloader","withSuspense","Suspense","fallback","AuthorizationForm","handleRegistration","validationSchema","Yup","shape","required","min","max","matches","useForm","mode","resolver","yupResolver","register","formState","handleSubmit","errors","touchedFields","onSubmit","placeholder","inCorrect","correct","AuthorizationPage","stopSubmit","_error","messages","responseCaptcha","url","ProfilePage","lazy","DialogsPage","UsersPage","MessagesPage","initialize","app","initializeTheApplication","useEffect","exact","path","render","reducers","combineReducers","profileReducer","dialogsPage","dialogsReducer","messagesPage","messagesReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","posts","content","imgSrc","countLikes","defaultStatusText","statusText","lookingAtMyProfile","setUserProfileAC","large","newPostText","updateStatusText","getStatusText","updateProfilePictureAC","checkId","addPost","updateNewStatusText","newStatusText","myId","defaultId","controlPanels","initializeTheApplicationAC","checkUserOrOwner","Number","dialogsData","dialogs","newMessage","newMessageBody","interlocutors","interlocutor","dialogData","onSendMessageClick","getDialogs","error","getMessagesAC"],"mappings":"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","file":"static/js/main.aadb58c8.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0\",\n    headers: {\n        \"API-KEY\": \"fd622230-6210-4ef3-a457-276f95f589d0\",\n    },\n});\n\nexport const usersApi = {\n    getUsers(currentPage = 1, pagesSize = 10) {\n        return instance.get(`/users?page=${currentPage}&count=${pagesSize}`);\n    },\n    follow(id) {\n        return instance.post('/follow/' + id);\n    },\n    unfollow(id) {\n        return instance.delete('/follow/' + id);\n    },\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`/profile/`+ id);\n    },\n    getStatus(userId) {\n        return instance.get('/profile/status/' + userId)\n                       .then(response => response);\n    },\n    updateStatus(status) {\n        return instance.put('profile/status', {status: status});\n    },\n    updateProfilePicture(imagefile) {\n        let formData = new FormData();\n        formData.append(\"image\", imagefile.files[0]);\n        return instance.put('/profile/photo', formData, {\n                                                         headers: {\n                                                                   'Content-Type': 'multipart/form-data'\n                                                                  }\n                                                        }\n                                                        );\n    },\n    saveProfile(profile) {\n        return instance.put('/profile', profile)\n    },\n}\n\nexport const authAPI = {\n    getAuthMe() {\n        return instance.get('auth/me');\n    },\n    signIn(email, password, rememberMe = false, captcha = null) {\n        return instance.post('/auth/login', {email, password, rememberMe, captcha});\n    },\n    logOut() {\n        return instance.delete('/auth/login');\n    },\n    getCaptcha() {\n        return instance.get('/security/get-captcha-url');\n    }\n}\n\nexport const securituAPI = {\n    getCaptchaUrl() {\n        return instance.get('/security/get-captcha-url');\n    }\n}\n\nexport const dialogsAPI = {\n    startCommunication(userId) { // открыть диалог с другом\n        return instance.put('/dialogs/' + userId);\n    },\n    getAllDialogs() { // получить все диалоги\n        return instance.get(\"/dialogs\")\n    },\n}\n\nexport const messagesAPI = {\n    getMessages(userId, currentPage, pagesSize) { // получить сообщения с этим пользователем\n        return instance.get(`/dialogs/${userId}/messages?page=${currentPage}&count=${pagesSize}`);\n    },\n    sendMessage(userId, message = \"\") { // отправить сообщение\n        debugger\n        return instance.post(`/dialogs/${userId}/messages`, {message});\n    },\n    messageViewed(messageId) { // сообщение просмотрено\n        return instance.get(`/dialogs/messages/${messageId}/viewed`);\n    },\n    deleteOnlyYouMessage(messageId) {\n        return instance.delete(`/dialogs/messages/${messageId}`)\n    },\n    addMessageSpam(messageId) { // добавить сообщение в спам\n        return instance.post(`/dialogs/messages/${messageId}/spam`);\n    },\n    restoreYourMessage(messageId) { // восстановить сообщение\n        return instance.put(`/dialogs/messages/${messageId}/restore`);\n    },\n    return_messages_newest_than_date(userId, date) { // не понятно что\n        return instance.put(`/dialogs/${userId}/messages/new?newerThen=${date}`);\n    },\n    getNewMessages() { // получить новые сообщения\n        return instance.get(`/dialogs/messages/new/count`);\n    },\n}\n/*\n/dialogs/id\nput\n\n*/","import {usersApi} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst IS_FETCHING_FOLLOW_OR_UNFOLLOW_START = 'IS_FETCHING_FOLLOW_OR_UNFOLLOW_START';\nconst IS_FETCHING_FOLLOW_OR_UNFOLLOW_END = 'IS_FETCHING_FOLLOW_OR_UNFOLLOW_END';\n\nlet initialState = {\n  users: [],\n  defaultAvatarSrc: DEFAULT_AVATAR_SRC,\n  pagesSize: 5,\n  totalUsersCount: 0,\n  isFetching: false,\n  isFetchingFollowOrUnfollowIdList: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case SET_USERS:\n      return {\n              ...state,\n              users: [...action.users]\n             }\n    case FOLLOW:   \n      return {\n              ...state,\n              users: state.users.map(u => {\n                if(u.id === action.id) {\n                  u.followed = true;\n                }\n                return u;\n              }),\n             }\n    case UNFOLLOW:\n      return {\n              ...state,\n              users: state.users.map(u => {\n                if(u.id === action.id) {\n                  u.followed = false;\n                }\n                return u;\n              }),\n             }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n               ...state,\n               totalUsersCount: action.totalUsersCount,\n             }\n    case TOGGLE_IS_FETCHING:\n      if (action.isFetching) {\n        return {\n                ...state,\n                isFetching: true,\n               }\n      }\n      else {\n        return {\n                ...state,\n                isFetching: false,\n               }\n      }\n    case IS_FETCHING_FOLLOW_OR_UNFOLLOW_START:\n        return {\n                ...state,\n                isFetchingFollowOrUnfollowIdList: [...state.isFetchingFollowOrUnfollowIdList, action.id],\n               }\n    case IS_FETCHING_FOLLOW_OR_UNFOLLOW_END:\n      let isFetchingFollowOrUnfollowIdList = state.isFetchingFollowOrUnfollowIdList.filter(id => id !== action.id);\n        return {\n                ...state,\n                isFetchingFollowOrUnfollowIdList,\n               }\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\nexport let setUsers =(users) => ({type: SET_USERS, users});\nexport let followAC = (id) => ({type: FOLLOW, id});\nexport let unfollowAC = (id) => ({type: UNFOLLOW, id});\nexport let setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\nexport let toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let isFetchingFollowOrUnfollowStart = (id) => ({type: IS_FETCHING_FOLLOW_OR_UNFOLLOW_START, id});\nexport let isFetchingFollowOrUnfollowEnd = (id) => ({type: IS_FETCHING_FOLLOW_OR_UNFOLLOW_END, id});\n\nexport const getUsersSC = (currentPage, pagesSize) => {\n  return async (dispatch) => {\n    let action = toggleIsFetching(true);\n    dispatch(action);\n    let response = await usersApi.getUsers(currentPage, pagesSize);\n    if (response.status === 200) {\n      action = setUsers(response.data.items);\n      dispatch(action);\n      action = setTotalUsersCount(response.data.totalCount);\n      dispatch(action);\n      action = toggleIsFetching(false);\n      dispatch(action);\n    }\n  }\n}\n\nconst followUnfollow = async (dispatch, id, UsersApiFollowOrUnfollow, actionCreator) => {\n    let action = isFetchingFollowOrUnfollowStart(id);\n    dispatch(action);\n    let response = await UsersApiFollowOrUnfollow(id);\n    if (response.data.resultCode === 0) {\n      action = actionCreator(id);\n      dispatch(action);\n    }\n    action = isFetchingFollowOrUnfollowEnd(id);\n    dispatch(action);\n}\n\nexport const follow = (id) => {\n  return async (dispatch) => {\n    followUnfollow(dispatch, id, usersApi.follow.bind(usersApi), followAC);\n  }\n}\n\nexport const unfollow = (id) => {\n  return async (dispatch) => {\n    followUnfollow(dispatch, id, usersApi.unfollow.bind(usersApi), unfollowAC);\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__X7H-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftPanelWrapper\":\"LeftPanel_leftPanelWrapper__2hj57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__12GGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__3RWNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationContainer\":\"Navigation_NavigationContainer__2tfGY\",\"NavigationContainer__list\":\"Navigation_NavigationContainer__list__23NXS\",\"NavigationContainer__item\":\"Navigation_NavigationContainer__item__1o3bX\",\"NavigationContainer__link\":\"Navigation_NavigationContainer__link___40hU\",\"active\":\"Navigation_active__3eftc\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d48a8973.png\";","module.exports = __webpack_public_path__ + \"static/media/signIn.66b9eed0.png\";","module.exports = __webpack_public_path__ + \"static/media/signUp.e6f42918.png\";","module.exports = __webpack_public_path__ + \"static/media/logOut.a4e6b624.png\";","export const SIGN_IN_IMG = require(\"../images/signIn.png\");\nexport const SIGN_UP_IMG = require(\"../images/signUp.png\");\nexport const LOG_OUT_IMG = require(\"../images/logOut.png\");\nexport const DEFAULT_USER_ID = 2;","export const DEFAULT_AVATAR_SRC = require(\"../images/avatar.png\");\r\n","import React from \"react\";\nimport style from \"./Navigation.module.scss\";\nimport {NavLink} from 'react-router-dom';\n\nconst Navigation = ({clickProfileLink,}) => {\n  return (\n    <header>\n      <div className={style.NavigationContainer}>\n        <ul className={style.NavigationContainer__list}>\n          <li className={style.NavigationContainer__item}>\n            <NavLink onClick={clickProfileLink} activeClassName={style.active} className={style.NavigationContainer__link} to=\"/Profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className={style.NavigationContainer__item}>\n            <NavLink activeClassName={style.active} className={style.NavigationContainer__link} to=\"/dialogs\">\n            Dialogs\n            </NavLink>\n          </li>\n          <li className={style.NavigationContainer__item}>\n            <NavLink activeClassName={style.active} className={style.NavigationContainer__link} to=\"/news\">\n              News\n            </NavLink>\n          </li>\n          <li className={style.NavigationContainer__item}>\n            <NavLink activeClassName={style.active} className={style.NavigationContainer__link} to=\"/music\">\n              Music\n            </NavLink>\n          </li>\n          <li className={style.NavigationContainer__item}>\n            <NavLink activeClassName={style.active} className={style.NavigationContainer__link} to=\"/users\">\n              Users\n            </NavLink>\n          </li>\n          <li className={style.NavigationContainer__item}>\n            <NavLink activeClassName={style.active} className={style.NavigationContainer__link} to=\"/settings\">\n              Settings\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from './Navigation';\nimport {getProfile, lookingMyProfile} from '../../redux/profile-reducer';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\n\nclass NavigationContainer extends React.Component {\n  clickProfileLink= () => {\n    if(!this.props.isAuth) {\n      console.log(\"Надо отправить на логинизацию, пользователь анонимный!\")\n    }\n  }\n\n  render() {\n    if(!this.props.isAuth) {\n      console.log(\"Надо запретить редактировать статус и так далее, пользователь анонимный.\")\n    }\n    return <Navigation clickProfileLink={this.clickProfileLink} />;\n  }\n};\n\n\nlet mapStateToProps = (state) => (\n  {\n    redrawToProfileComponent: state.profilePage.redrawToProfileComponent,\n    isAuth: state.auth.isAuth,\n  }\n)\nexport default compose(\n                       connect(mapStateToProps, {getProfile, lookingMyProfile})\n                      )(NavigationContainer);\n","import React from \"react\";\nimport style from \"./Friend.module.scss\";\nimport PropTypes from \"prop-types\";\nimport {NavLink} from \"react-router-dom\";\nimport {DEFAULT_AVATAR_SRC} from \"../../../constants/Users\";\n\nconst Friend = ({srcPhoto, clickProfileUser, id, name}) => {\n  srcPhoto = srcPhoto ? srcPhoto: DEFAULT_AVATAR_SRC;\n\n  return (<NavLink onClick={() => clickProfileUser(id)} className={style.friendContainer} to={`/Profile/${id}`}>\n            <img className={style.photo} src={srcPhoto} />\n            <p className={style.name}>{name}</p>\n          </NavLink>\n          );\n};\n\nexport default Friend;","import React from \"react\";\nimport style from \"./FriendList.module.scss\";\nimport PropTypes from \"prop-types\";\nimport Friend from \"./Friend/Friend\";\n\nconst FriendList = ({friendList, clickProfileUser}) => {\n  let styleContainer = friendList.length ? style.container: \"\";\n  let friends = friendList.map((friend) => <Friend id={friend.id} \n                                                   srcPhoto={friend.photos.small}\n                                                   name={friend.name} \n                                                   clickProfileUser={clickProfileUser} />);\n  return ( <div className={styleContainer}>\n            {friends}\n           </div>\n         );\n}\n\nFriendList.propTypes = {\n  // message: PropTypes.string.isRequired,\n};\n\nexport default FriendList;","import React from \"react\";\nimport FriendList from './FriendList'\nimport {connect} from \"react-redux\";\nimport {getProfile, notLookingMyProfile} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\nclass FriendListContainer extends React.Component {\n  clickProfileUser = (id) => {\n    this.props.getProfile(id);\n    this.props.notLookingMyProfile();\n  }\n  render() {\n    return <FriendList friendList={this.props.friendList} clickProfileUser={this.clickProfileUser} />\n  }\n}\n\nlet mapStateToProps = (state) => {\n  let friendList = state.usersPage.users.filter(user => user.followed);\n  return {\n          friendList,\n         }\n}\n\n\nexport default compose(\n                       connect(mapStateToProps, {getProfile, notLookingMyProfile})\n                      )(FriendListContainer);","import LeftPanel from './LeftPanel.jsx';\n\nexport default LeftPanel;","import React from \"react\";\nimport style from \"./LeftPanel.module.scss\";\nimport NavigationContainer from \"../Navigation/NavigationContainer\";\nimport FriendListContainer from \"../FriendList/FriendListContainer\";\n\nconst LeftPanel = () => {\n  return ( <div className={style.leftPanelWrapper}>\n             <NavigationContainer />\n             <FriendListContainer />\n          </div>\n         )};\n\nexport default LeftPanel;","import React from \"react\";\r\nimport style from \"./AuthorizationItem.module.scss\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst AuthorizationItem = ({onClickF, srcImg, text}) => {\r\n    return (<NavLink onClick={onClickF}\r\n                     activeClassName={\"\"}\r\n                     className={style.authorizationItem} \r\n                     to={\"/authorization\"}>\r\n               <img className={style.authorizationImg} alt={\"authorization\"} src={srcImg} width={100} height={100} />\r\n               <p className={style.authorizationText}>{text}</p>\r\n             </NavLink>);\r\n};\r\n\r\nexport default AuthorizationItem;","import React from \"react\";\nimport style from \"./AuthorizationPanel.module.scss\";\nimport AuthorizationItem from './AuthorizationItem/AuthorizationItem';\nimport {SIGN_IN_IMG, SIGN_UP_IMG, LOG_OUT_IMG} from '../../../constants/Authorization';\n\nconst AuthorizationPanel = ({isAuth, authorizationInfo, logOutClick, signInOnClick, signUpOnClick}) => {\n  if (isAuth) {\n    return (<div className={style.authorizationPanelWrapper}>\n              <div className={style.authorizationPanelInfo}>\n                <p className={style.infoText}>{\"Айди: \" + authorizationInfo.userId}</p>\n                <p className={style.infoText}>{\"Логин: \" + authorizationInfo.login}</p>\n                <p className={style.infoText}>{\"Почта: \" + authorizationInfo.email}</p>\n              </div>\n              <div className={style.authorizationPanel}>\n                <AuthorizationItem text={\"Выйти\"}\n                                   onClickF={logOutClick}\n                                   srcImg={LOG_OUT_IMG} />\n              </div>\n            </div>);\n  }\n  else {\n    return (<div className={style.authorizationPanel}>\n             <AuthorizationItem text={\"Войти\"}\n                                onClickF={signInOnClick}\n                                srcImg={SIGN_IN_IMG} />\n             <AuthorizationItem text={\"Зарегестрироваться\"}\n                                onClickF={signUpOnClick}\n                                srcImg={SIGN_UP_IMG} />\n           </div>);\n  }\n};\n\nexport default AuthorizationPanel;","import { stopSubmit } from \"redux-form\";\nimport {authAPI, securituAPI} from \"../api/api\";\nimport {DEFAULT_USER_ID, SIGN_IN_IMG, SIGN_UP_IMG, LOG_OUT_IMG} from \"../constants/Authorization\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SIGN_IN = \"SIGN_IN\";\nconst SIGN_UP = \"SIGN_UP\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_CAPTCHA = \"GET_CAPTCHA\";\nconst START_LOGOUT_FETCHING = \"START_LOGOUT_FETCHING\";\nconst END_LOGOUT_FETCHING = \"END_LOGOUT_FETCHING\";\nlet initialState = {\n  userId: DEFAULT_USER_ID,\n  isAuth: false,\n  logoutFetching: false,\n  email: null,\n  login: null,\n  captchaUrl: null,\n  signInImg: SIGN_IN_IMG,\n  signUpImg: SIGN_UP_IMG,\n  logOutImg: LOG_OUT_IMG,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n              ...state,\n              ...action.data,\n              isAuth: action.isAuth,\n             }\n      case SIGN_IN:\n        return {\n                ...state,\n                isAuth: true,\n               }\n      case SIGN_UP:\n        return {\n                ...state,\n                isAuth: action.isAuth,\n               }\n      case LOG_OUT:\n        return {\n                ...state,\n                isAuth: false,\n               }\n      case START_LOGOUT_FETCHING: \n        return {\n                ...state,\n                logoutFetching: true,                \n        }\n      case END_LOGOUT_FETCHING: \n        return {\n                ...state,\n                logoutFetching: false,\n        }\n      case GET_CAPTCHA:\n        return {\n                ...state,\n                captchaUrl: action.captchaUrl,\n               }        \n      default:\n        return state;\n  }\n}\n\nconst startLogoutFetchingAC = () => \n({type: START_LOGOUT_FETCHING});\n\nconst endLogoutFetchingAC = () => \n({type: END_LOGOUT_FETCHING});\n\nconst startLogoutFetching = ()  => {\n  return (dispatch) => {\n    let action = startLogoutFetchingAC();\n    dispatch(action);\n  }  \n}\n\nconst endLogoutFetching = ()  => {\n  return (dispatch) => {\n    let action = endLogoutFetchingAC();\n    dispatch(action);\n  }  \n}\n\n\n\nexport default authReducer;\nexport let setUserDataAC = (userId = null, email = null, login = null, isAuth = false) => {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId,\n      email,\n      login\n    },\n    isAuth: isAuth,\n  }\n};\n\nexport let signInAC = (isAuth) => ({type: SIGN_IN,});\n\nexport let signUpAC = (isAuth) => {\n  return {\n    type: SIGN_UP,\n    isAuth,\n   }\n}\n\nexport let logOutAC = () => ({type: LOG_OUT})\nconst getCaptchaAC = (captchaUrl) => \n({type: GET_CAPTCHA, captchaUrl});\n\nexport const authMe = () => {\n  return async (dispatch) => {\n    let response = await authAPI.getAuthMe();\n    if (response.data.resultCode === 0) {\n      let {id, email, login} = response.data.data;\n      let action = setUserDataAC(id, email, login, true);\n      dispatch(action);\n    }\n    else if (response.data.resultCode === 2) {\n      let action = setUserDataAC(DEFAULT_USER_ID);\n      dispatch(action);\n    }\n    return response;\n  }\n}\n\nexport const signIn = (email, password, rememberMe = null, captcha)  => {\n   return async (dispatch) => {\n     let response = await authAPI.signIn(email, password, rememberMe, captcha);\n     if (response.data.resultCode === 0) {\n       let action = authMe();\n       dispatch(action);\n     }\n     else {\n       let action = authMe();\n       dispatch(action);\n       action = stopSubmit(\"authorization\", {_error: response.data.messages[0]});\n       dispatch(action);\n       let responseCaptcha = await securituAPI.getCaptchaUrl();\n       action = getCaptchaAC(responseCaptcha.data.url);\n       dispatch(action);\n     }\n     return response;\n   }  \n}\n\nexport const signUp = ()  => {\n  return (dispatch) => {}  \n}\n\nexport const logOut = ()  => {\n  return async (dispatch, getState) => {\n    \n    let action = startLogoutFetchingAC();\n    dispatch(action);\n    \n    let response = await authAPI.logOut();\n    \n    if (response.data.resultCode === 0) {\n      let action = setUserDataAC(DEFAULT_USER_ID);\n      dispatch(action);\n      \n    }\n    \n    action = endLogoutFetching();\n    dispatch(action);\n    \n    return response;\n  }  \n}","import React from \"react\";\nimport AuthorizationPanel from \"./AuthorizationPanel\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {logOut, authMe} from \"../../../redux/auth-reducer\";\nimport {getProfile} from \"../../../redux/profile-reducer\";\n\nclass AuthorizationPanelContainer extends React.Component {\n  signInOnClick = () => {\n    console.log(\"открыть страницу входа в систему\")\n  }\n  signUpOnClick = () => {\n    console.log(\"открыть страницу регистрации\")\n  }\n  logOutClick = async () => {\n    console.log(\"выйти из системы\");\n    \n    await this.props.logOut();\n    \n  }\n  \n  render() {\n    return (<AuthorizationPanel  signInImg={this.props.signInImg}\n                                 signUpImg={this.props.signUpImg}\n                                 logOutImg={this.props.logOutImg}\n                                 signInOnClick={this.signInOnClick}\n                                 signUpOnClick={this.signUpOnClick}\n                                 logOutClick={this.logOutClick}\n                                 isAuth={this.props.isAuth} \n                                 authorizationInfo={this.props.authorizationInfo}\n                                 profile={this.props.profilePage} />)\n  }\n};\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    authorizationInfo: {  \n                          userId: state.auth.userId,\n                          email: state.auth.email,\n                          login: state.auth.login,\n                        },\n    signInImg: state.auth.signInImg,\n    signUpImg: state.auth.signUpImg,\n    logOutImg: state.auth.logOutImg,\n});\n\nexport default compose(\n                       connect(mapStateToProps,{logOut, authMe}),\n                      )(AuthorizationPanelContainer);\n","import Header from './Header.jsx';\n\nexport default Header;\n","import React from \"react\";\nimport style from \"./Header.module.scss\";\nimport AuthorizationPanelContainer from \"../Authorization/AuthorizationPanel/AuthorizationPanelContainer\";\n\nconst Header = () => {\n  return (\n    <header>\n      <div className={style.HeaderContainer}>\n        <AuthorizationPanelContainer />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport style from \"./Preloaders.module.scss\";\n\nconst PreloaderInitializationApplication = (props) => {\n  return (<div>\n            <h1>Инициализация приложения!</h1>\n          </div>\n          );\n};\n\nexport default PreloaderInitializationApplication;\n","import React from \"react\";\nimport style from \"./Preloaders.module.scss\";\n\n\nconst Preloader = (props) => {\n  return (<div>\n            <h2>Загрузка...</h2>\n          </div>\n          );\n};\n\nexport default Preloader;\n","import React from \"react\";\nimport Preloader from \"../components/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n  return (props) => {\n    return <React.Suspense fallback={<Preloader />}>\n             <Component {...props} />\n           </React.Suspense>\n  };\n}","import React from \"react\";\nimport style from \"../../common/FormsControls/FormControls.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nexport const AuthorizationForm = ({handleRegistration, captchaUrl}) => {\n  const validationSchema = Yup.object().shape({\n    login: Yup.string()\n              .required('Поле обязательно для заполнения.')\n              .min(2, 'Миниум 2 символа!')\n              .max(50, 'Максимум 50 символов')\n              .matches(/[@]/, 'Символ @ обязателен'),\n    password: Yup.string()\n                 .required('Поле обязательно для заполнения.')\n                 .min(2, 'Миниум 2 символа!')\n                 .max(50, 'Максимум 50 символов'),\n  });\n\n  const { register, formState, handleSubmit } = useForm({\n      mode: 'onBlur',\n      resolver: yupResolver(validationSchema)\n  });\n\n  const {errors, touchedFields} = formState;\n\n\n    return (\n        <form onSubmit={handleSubmit(handleRegistration)}>\n          <div>\n            <input placeholder=\"Логин\"\n                   type=\"text\"\n                   className={errors.login && style.inCorrect ||touchedFields.login && style.correct }\n                   {...register(\"login\")} />\n                   {errors.login && <p>{errors.login.message}</p>}\n          </div>\n          <div>\n            <input placeholder=\"Пароль\"\n                   className={errors.password && style.inCorrect ||touchedFields.password && style.correct}\n                   type=\"password\"\n                   {...register(\"password\")} />\n                   {errors.password && <p>{errors.password.message}</p>}\n          </div>\n          <div>\n            <input type=\"checkbox\" {...register(\"rememberMe\")} /> запомнить меня\n          </div>\n          <button>Залогиниться</button>\n          <div>\n            {captchaUrl && <img src={captchaUrl} />}\n            {captchaUrl && <div><input type=\"text\"\n                                        {...register(\"captcha\")} />\n                           </div> }\n          </div>\n        </form>\n      );\n}","import AuthorizationPage from \"./AuthorizationPage\";\nexport default AuthorizationPage;","import React from \"react\";\nimport {signIn} from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {AuthorizationForm} from \"./AuthorizationPage/AuthorizationForm\";\n\nconst AuthorizationPage = ({signIn, isAuth, captchaUrl}) => {\n  const handleRegistration = (formData) => {\n    signIn(formData.login, formData.password, formData.rememberMe, formData.captcha);\n  }\n\n  if(isAuth) {\n    return <Redirect to=\"/profile\" />\n  }\n  return (\n          <div>\n            <h1>Авторизация</h1>\n            <AuthorizationForm handleRegistration={handleRegistration}\n                               captchaUrl={captchaUrl} />\n          </div>\n         );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl,\n})\n\nexport default connect(mapStateToProps, {signIn})(AuthorizationPage);","import React, {useEffect} from 'react';\nimport style from './App.module.scss';\nimport LeftPanel from '../LeftPanel';\nimport Header from '../Header';\n//import ProfileContainer from '../Profile/ProfileContainer';\n//import DialogsContainer from '../Dialogs/DialogsContainer';\nimport PreloaderInitializationApplication from \"../Preloader/PreloaderInitializationApplication\";\n//import Users from '../Users/Users';\nimport { Route, Switch } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport app, {initializeTheApplication} from \"../../redux/app-reducer\";\nimport {authMe} from \"../../redux/auth-reducer\";\nimport {withSuspense} from \"../../hoc/withSuspense\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthorizationPage from '../../pages/AuthorizationPage';\nconst ProfilePage =  React.lazy(() => import('../../pages/ProfilePage'));\nconst DialogsPage =  React.lazy(() => import('../../pages/DialogsPage'));\nconst UsersPage =        React.lazy(() => import('../../pages/UsersPage'));\nconst MessagesPage = React.lazy(() => import('../../pages/MessagesPage'));\n\nconst App = (props) => {\n  useEffect(() => {\n    props.authMe()\n         .then(response => {\n           props.initializeTheApplication(true);\n         });\n    return () => {}\n  }, [])\n  \n  \n    if (!props.initialize) {\n      return (<PreloaderInitializationApplication />)\n    }\n\n    return (\n      <div>\n        {props.initialize && <div>\n        <Header />\n        <div className={style.container}>\n          <LeftPanel />\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/profile' />} />\n            <Route path='/dialogs' render={withSuspense(DialogsPage)} />\n            <Route path='/messages/:userId?' render={withSuspense(MessagesPage)} />\n            <Route path='/profile/:userId?' render={withSuspense(ProfilePage)} />\n            <Route path='/users' render={withSuspense(UsersPage)} />\n            <Route path='/authorization' render={() => <AuthorizationPage />} />\n            <Route path='*' render={() => <h2>Error 404, not found!</h2>} />\n          </Switch>\n        </div>\n        </div>}\n      </div>);\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    initialize: state.app.initializeTheApplication,\n  }\n}\nexport default connect(mapStateToProps, {authMe, initializeTheApplication})(App);","import {combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport messagesReducer from \"./messages-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport app from \"./app-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\nimport {reducer as formReducer} from \"redux-form\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  messagesPage: messagesReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: app,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.store = store;\nexport default store;","import App from './components/App/App.js';\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom';\nimport React from 'react';\nimport store from './redux/redux-store.js';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(<BrowserRouter>\n                  <Provider store={store}>\n                    <App />\n                  </Provider>\n                </BrowserRouter>, document.getElementById('root'));\n","import {\n  usersApi,\n  profileAPI\n} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nimport {DEFAULT_STATUS_TEXT} from \"../constants/Profile\";\nimport {DEFAULT_USER_ID} from \"../constants/Authorization\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst START_FETCHING = 'START_FETCHING';\nconst STOP_FETCHING = 'STOP_FETCHING';\nconst GET_STATUS = 'GET_STATUS';\nconst UPDATE_STATUS_TEXT = 'UPDATE_STATUS_TEXT';\nconst SET_FLAG_LOOKING_AT_MY_PROFILE = 'SET_FLAG_LOOKING_AT_MY_PROFILE';\nconst SET_FLAG_NOT_LOOKING_AT_MY_PROFILE = 'SET_FLAG_NOT_LOOKING_AT_MY_PROFILE';\nconst UPDATE_PROFILE_PICTURE = 'UPDATE_PROFILE_PICTURE';\nconst SAVE_PROFILE = 'SAVE_PROFILE';\n\n//updateProfilePicture\n\nlet initialState = {\n  posts: [{\n      content: 'alo',\n      imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n      countLikes: '1',\n    },\n    {\n      content: 'helo',\n      imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n      countLikes: '3',\n    },\n  ],\n  profile: null,\n  isFetching: false,\n  defaultStatusText: DEFAULT_STATUS_TEXT,\n  statusText: DEFAULT_STATUS_TEXT,\n  lookingAtMyProfile: true,\n  redrawToProfileComponent: true,\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_PROFILE:\n      return {\n              ...state,\n              profile: {\n                        ...action.profile,\n                        photos: {\n                                 ...action.profile.photos,\n                                 large: action.profile.photos.large || DEFAULT_AVATAR_SRC,\n                                }\n                       },\n             };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, {\n            content: action.message,\n            imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n            countLikes: '222',\n          }],\n          newPostText: \"\",\n      };\n    case START_FETCHING:\n      return {\n        ...state,\n        isFetching: true,\n      }\n      case STOP_FETCHING:\n        return {\n          ...state,\n          isFetching: false,\n        }\n      case UPDATE_STATUS_TEXT:\n        let updateStatusText = action.statusText && action.statusText !== \"\"? action.statusText: DEFAULT_STATUS_TEXT;\n        return {\n                ...state,\n                statusText: updateStatusText,\n               }\n      case SET_FLAG_LOOKING_AT_MY_PROFILE:\n        return {\n                ...state,\n                lookingAtMyProfile: true,\n               }\n      case SET_FLAG_NOT_LOOKING_AT_MY_PROFILE:\n        return {\n                ...state,\n                lookingAtMyProfile: false,\n               }\n      case GET_STATUS:\n        let getStatusText = action.statusText && action.statusText !== \"\"? action.statusText: DEFAULT_STATUS_TEXT;\n        return {\n                ...state,\n                statusText: getStatusText,\n               }\n      case UPDATE_PROFILE_PICTURE:\n        return {\n                ...state,\n                profile: {\n                          ...state.profile,\n                          photos: {...action.imagefile}\n                         },\n               }\n      case SAVE_PROFILE:\n        return {\n                ...state,\n                profile: {\n                          ...state.profile,\n                          ...action.profile,\n                         }\n               }\n        default:\n          return state;\n  }\n}\n\nexport default profileReducer;\n\nexport let addPostAC = (text) =>\n  ({\n    type: ADD_POST,\n    message: text,\n  });\n\nexport let setUserProfileAC = (profile) =>\n  ({\n    type: SET_USER_PROFILE,\n    profile\n  });\n\nexport let startFetchingAC = () =>\n  ({\n    type: START_FETCHING\n  });\n\nexport let stopFetchingAC = () =>\n  ({\n    type: STOP_FETCHING\n  });\n\nexport let updateNewStatusTextAC = (statusText) =>\n({\n  type: UPDATE_STATUS_TEXT,\n  statusText,\n});\n\nexport let lookingMyProfileAC = () =>\n({\n  type: SET_FLAG_LOOKING_AT_MY_PROFILE,\n});\n\nexport let notLookingMyProfileAC = () =>\n({\n  type: SET_FLAG_NOT_LOOKING_AT_MY_PROFILE,\n});\n\nexport let getStatusAC = (statusText) =>\n({\n  type: GET_STATUS,\n  statusText\n})\n\nexport let updateProfilePictureAC = (imagefile) =>\n({\n  type: UPDATE_PROFILE_PICTURE,\n  imagefile,\n})\n\nexport let saveProfileAC = (profile) =>\n({\n  type: SAVE_PROFILE,\n  profile,\n})\n\nexport const getProfile = (id) => {\n  return async (dispatch, getState) => {\n    id = checkId(id, getState().auth.isAuth, getState().auth.userId, DEFAULT_USER_ID);\n    let action = startFetchingAC();\n    dispatch(action);\n    let response = await profileAPI.getProfile(id);   \n    if (response.status === 200) {\n      action = setUserProfileAC(response.data);\n      dispatch(action);\n      action = stopFetchingAC();\n      dispatch(action);\n    }\n  }\n}\n\nexport const addPost = (newPostText) => {\n  return (dispatch) => {\n    let action = addPostAC(newPostText);\n    dispatch(action);\n  }\n}\n\nexport const updateNewStatusText = (newStatusText) => {\n  return async (dispatch) => {\n    let response = await profileAPI.updateStatus(newStatusText)\n    if (response.status === 200) {\n      let action = updateNewStatusTextAC(newStatusText);\n      dispatch(action);\n    }\n  }\n}\n\nexport const lookingMyProfile = () => {\n  return (dispatch) => {\n    let action = lookingMyProfileAC();\n    dispatch(action);\n  }\n}\n\nexport const notLookingMyProfile = () => {\n  return (dispatch) => {\n    let action = notLookingMyProfileAC();\n    dispatch(action);\n  }\n}\n\nexport const getStatus = (id) => {\n  return async (dispatch, getState) => {\n    \n    id = checkId(id, getState().auth.isAuth, getState().auth.userId, DEFAULT_USER_ID);\n    let response = await profileAPI.getStatus(id)\n    if (response.status === 200) {\n\n      let action = getStatusAC(response.data);\n      dispatch(action);\n    }\n  }\n}\n\nexport const updateProfilePicture = (imagefile) => {\n  return async (dispatch) => {\n    let response = await profileAPI.updateProfilePicture(imagefile);\n    if (response.data.resultCode === 0) {\n      let action = updateProfilePictureAC(response.data.data.photos);\n      dispatch(action);\n    }\n    else {\n      console.log(\"Фотография профиля не обновилась, не подходящий формат файла!\")\n    }\n  }\n}\n\nexport const saveProfile = (profile) => {\n  return async (dispatch, getState) => {\n    let id = getState().auth.userId;\n    let response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n      let response = await profileAPI.getProfile(id)\n      if (response.status === 200) {\n        let action = setUserProfileAC(response.data);\n        dispatch(action);\n      }\n    }\n    return response;\n  }\n}\n\nconst checkId = (id, isAuth, myId, defaultId) => {\n  console.log(\"id \", id, \"isAuth \", isAuth && \"да\" || \"нет\", \"myId \", myId, \"defaultId \", defaultId);\n  if(!id) {\n    id = isAuth ? myId: defaultId;\n  }\n  console.log(\"Возвращаю id \", id);\n  \n  return id;\n}","export const DEFAULT_STATUS_TEXT = \"Статуса нет.\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorizationPanelWrapper\":\"AuthorizationPanel_authorizationPanelWrapper__1HPSL\",\"authorizationPanelInfo\":\"AuthorizationPanel_authorizationPanelInfo__xRofq\",\"authorizationPanel\":\"AuthorizationPanel_authorizationPanel__2InEg\",\"infoText\":\"AuthorizationPanel_infoText__3jks1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"FormControls_default__3asuf\",\"correct\":\"FormControls_correct__1wgA3\",\"inCorrect\":\"FormControls_inCorrect__3u56-\",\"promptText\":\"FormControls_promptText__3mvum\",\"inCorrectSubmitDataHint\":\"FormControls_inCorrectSubmitDataHint__3Us35\"};","const INITIALIZE_THE_APPLICATION = \"INITIALIZE_THE_APPLICATION\";\nconst OPEN_CONTROL_PANEL = \"OPEN_CONTROL_PANEL\";\nconst CLOSE_CONTROL_PANEL = \"CLOSE_CONTROL_PANEL\";\n\nlet initialState = {\n  initializeTheApplication: false,\n  controlPanels: false,\n};\n\nconst app = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZE_THE_APPLICATION:\n      return {\n              ...state,\n              initializeTheApplication: action.initializeTheApplication,\n             }\n    case OPEN_CONTROL_PANEL:\n      \n      return {\n              ...state,\n              controlPanels: true,\n             }\n    case CLOSE_CONTROL_PANEL:\n      \n      return {\n              ...state,\n              controlPanels: false,\n             }\n      default:\n        return state;\n  }\n}\n\nexport let initializeTheApplicationAC = (initializeTheApplication) => {\n  return {\n          type: INITIALIZE_THE_APPLICATION,\n          initializeTheApplication,\n         }\n}\n\nexport let openControlPanelAC = () => ({type: OPEN_CONTROL_PANEL});\nexport let closeControlPanelAC = () => ({type: CLOSE_CONTROL_PANEL});\n\nexport const initializeTheApplication = (initializeTheApplication) => {\n  return (dispatch) => {\n           dispatch(initializeTheApplicationAC(initializeTheApplication));\n  }\n}\n\nexport const openControlPanel = () => {\n  return (dispatch) => {\n    \n    let action = openControlPanelAC();\n    dispatch(action);\n  }\n}\n\nexport const closeControlPanel = () => {\n  return (dispatch) => {\n    \n    let action = closeControlPanelAC();\n    dispatch(action);\n  }\n}\n\nexport const checkUserOrOwner = (id) => {\n  return (dispatch, getState) => {\n    id = Number(id);\n    const myId = getState().auth.userId;\n    const isAuth = getState().auth.isAuth;\n    if (id && id === myId) { // есть в адресной строке id и он мой ОТКРЫТЬ\n      let action = openControlPanelAC();\n      dispatch(action);\n    }\n    else if (id) { // есть в адресной строке id и он не мой СКРЫТЬ\n      let action = closeControlPanelAC();\n      dispatch(action);\n    }\n    else if(isAuth) { // если я авторизован и адресная строка пустая ОТКРЫТЬ\n      let action = openControlPanelAC();\n      dispatch(action);\n    }\n    else if(!isAuth) { // иначе если я не авторизован и адресная строка пустая СКРЫТЬ\n      let action = closeControlPanelAC();\n      dispatch(action);\n    }\n  }\n}\n\nexport default app;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"Friend_friendContainer__1rLX-\",\"photo\":\"Friend_photo__1FsUN\",\"name\":\"Friend_name__2H3tN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorizationItem\":\"AuthorizationItem_authorizationItem__1A_WQ\",\"authorizationImg\":\"AuthorizationItem_authorizationImg__1PfDF\",\"authorizationText\":\"AuthorizationItem_authorizationText__SXoAY\"};","import {dialogsAPI} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst START_COMMUNICATION = 'START_COMMUNICATION';\nconst GET_DIALOGS = 'GET_ALL_DIALOGS';\nconst GET_MESSAGES = 'GET_MESSAGES';\n\nlet initialState = {\n  messages: [],\n  dialogsData: [],\n  dialogs: [],\n  messages: {\n             totalCount: null,\n             items: [],\n            },\n  interlocutors: [],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return {\n              ...state,\n              messages: [...state.messages, {id: 6, message: action.newMessage}],\n              newMessageBody: \"\",\n             };\n    case START_COMMUNICATION:\n      return {\n              ...state,\n              interlocutors: [...state.interlocutors, action.interlocutor],\n             }\n    case GET_DIALOGS:\n      return {\n              ...state,\n              dialogs: [\n                        ...action.dialogs.map( dialogData => {\n                                                              if (!dialogData.photos.small) dialogData.photos.small = DEFAULT_AVATAR_SRC;\n                                                              if (!dialogData.photos.large) dialogData.photos.large = DEFAULT_AVATAR_SRC;\n                                                              return dialogData;   \n                                                             }),\n                       ],\n             }\n    case GET_MESSAGES:\n      return {\n              ...state,\n              messages: action.messages,\n             }\n    default:\n      return state;\n  }\n}\n\nexport default dialogsReducer;\n\nconst sendMessageCreatorAC = (newMessage) => ({type: SEND_MESSAGE, newMessage,});\nconst startCommunicationAC = (interlocutor) => ({type: START_COMMUNICATION, interlocutor,});\nconst getDialogsAC = (dialogs) => ({type: GET_DIALOGS, dialogs,});\nconst getMessagesAC = (messages) => ({type: GET_MESSAGES, messages,});\n\n\n\nexport const onSendMessageClick = (newMessageBody) => {\n      return (dispatch) => {\n               let action = sendMessageCreatorAC(newMessageBody);\n               dispatch(action);\n             }\n}\n\nexport const startCommunication = (userId) => {\n  return async (dispatch) => {\n           let response = await dialogsAPI.startCommunication(userId);\n           let action = startCommunicationAC(response);\n           dispatch(action);\n         }\n}\n\nexport const getDialogs = () => {\n  return async (dispatch) => {\n           const response = await dialogsAPI.getAllDialogs();\n           let action = getDialogsAC(response.data);\n           dispatch(action);\n  }\n}\n\nexport const getMessages = (userId, currentPage = 1, pagesSize = 10) => {\n  return async (dispatch) => {\n    const response = await dialogsAPI.getMessages(userId, currentPage, pagesSize);\n    const action = getMessagesAC(response.data);\n    dispatch(action);\n  }\n}","import {messagesAPI} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst GET_MESSAGES = 'GET_MESSAGES';\n\nlet initialState = {\n  messages: [],\n  totalCount: null,\n  error: null,\n};\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return {\n              ...state,\n              // messages: [...state.messages, {id: 6, message: action.newMessage}],\n              // newMessageBody: \"\",\n             };\n    case GET_MESSAGES:\n      return {\n              ...state,\n              messages: action.messages.items,\n              totalCount: action.messages.totalCount,\n             }\n    default:\n      return state;\n  }\n}\n\nconst sendMessageAC = (newMessage) => ({type: SEND_MESSAGE, newMessage,});\nconst getMessagesAC = (messages) => ({type: GET_MESSAGES, messages,});\n\nexport const sendMessage = (userId, message) => {\n      return async (dispatch) => {\n        debugger\n               let response = await messagesAPI.sendMessage(userId, message);\n               debugger\n               let action = sendMessageAC(response);\n               dispatch(action);\n             }\n}\n\nexport const getMessages = (userId, currentPage = 1, pagesSize = 10) => {\n  return async (dispatch) => {\n    const response = await messagesAPI.getMessages(userId, currentPage, pagesSize);\n    const action = getMessagesAC(response.data);\n    dispatch(action);\n  }\n}\n\nexport default messagesReducer;"],"sourceRoot":""}