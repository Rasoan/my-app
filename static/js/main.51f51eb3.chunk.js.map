{"version":3,"sources":["redux/dialogs-reducer.js","redux/messages-reducer.js","redux/users-reducer.js","components/App/App.module.scss","api/api.js","images/signIn.png","images/signUp.png","images/logOut.png","images/avatar.png","components/Header/Header.module.scss","redux/auth-reducer.js","components/Preloaders/PreloaderDefault/index.js","components/Preloaders/PreloaderDefault/PreloaderDefault.jsx","hoc/withSuspense.js","components/AuthorizationForm/AuthorizationForm.jsx","components/AuthorizationForm/index.js","pages/AuthorizationPage/AuthorizationPage.jsx","pages/AuthorizationPage/index.js","constants/path.js","components/Navigation/NavigationTes.jsx","components/Navigation/index.js","components/AuthorizationPanel/AuthorizationPanel.jsx","components/AuthorizationPanel/index.js","components/Header/Header.jsx","components/Header/index.js","components/App/AppWithRoutes.jsx","components/Preloaders/PreloaderInitializationApplication/index.js","components/Preloaders/PreloaderInitializationApplication/PreloaderInitializationApplication.jsx","components/App/App.jsx","components/App/index.js","redux/redux-store.js","index.js","redux/app-reducer.js","constants/Authorization.js","constants/Users.js","styles-global/FormControls.module.scss","redux/profile-reducer.js","constants/Profile.js"],"names":["initialState","messages","dialogsData","dialogs","interlocutors","dialogsReducer","state","action","type","id","message","newMessage","newMessageBody","interlocutor","map","dialogData","photos","small","DEFAULT_AVATAR_SRC","large","onSendMessageClick","dispatch","startCommunication","userId","a","dialogsAPI","response","getDialogs","getAllDialogs","data","totalCount","error","getMessagesAC","sendMessage","messagesAPI","getMessages","currentPage","pagesSize","messagesReducer","items","users","defaultAvatarSrc","totalUsersCount","isFetching","isFetchingFollowOrUnfollowIdList","usersReducer","u","followed","filter","followAC","unfollowAC","toggleIsFetching","isFetchingFollowOrUnfollowStart","isFetchingFollowOrUnfollowEnd","getUsersSC","usersApi","getUsers","status","followUnfollow","UsersApiFollowOrUnfollow","actionCreator","resultCode","follow","bind","unfollow","module","exports","instance","axios","withCredentials","baseURL","headers","get","post","delete","profileAPI","getProfile","getStatus","then","updateStatus","put","updateProfilePicture","imagefile","formData","FormData","append","files","saveProfile","profile","authAPI","getAuthMe","signIn","email","password","rememberMe","captcha","logOut","getCaptcha","securituAPI","getCaptchaUrl","messageViewed","messageId","deleteOnlyYouMessage","addMessageSpam","restoreYourMessage","return_messages_newest_than_date","date","getNewMessages","DEFAULT_USER_ID","isAuth","login","captchaUrl","signInImg","SIGN_IN_IMG","signUpImg","SIGN_UP_IMG","logOutImg","LOG_OUT_IMG","authReducer","setUserDataAC","getCaptchaAC","authMe","PreloaderDefault","withSuspense","Component","props","Suspense","fallback","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","AuthorizationForm","classes","handleRegistration","validationSchema","Yup","shape","required","min","max","matches","useForm","mode","resolver","yupResolver","register","formState","handleSubmit","control","errors","touchedFields","onSubmit","className","TextField","variant","fullWidth","label","autoComplete","autoFocus","placeholder","style","inCorrect","correct","name","defaultValue","rules","render","field","FormControlLabel","Checkbox","Button","color","src","alt","Box","display","flexDirection","Link","component","NavLink","to","mt","Typography","Date","getFullYear","actionCreators","stopSubmit","_error","responseCaptcha","url","connect","auth","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","alignItems","avatar","secondary","main","AuthorizationPage","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","drawer","breakpoints","up","flexShrink","appBar","marginLeft","toolbar","mixins","minHeight","toolbarMobile","drawerPaper","drawerPaperLarge","position","drawerPaperMobile","content","flexGrow","padding","test","zIndex","MyDrawer","classToolbar","List","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","Navigation","clickProfileLink","navigationPanelVisibility","toggleNav","window","useTheme","undefined","document","body","aria-label","Hidden","smUp","implementation","Drawer","anchor","direction","open","modal","ModalProps","keepMounted","onEscapeKeyDown","onBackdropClick","xsDown","refreshRequests","redrawToProfileComponent","profilePage","app","NavigationTes","exit","textTransform","textAlign","marginRight","mainButton","textDecoration","AuthorizationPanel","authorizationInfo","React","useState","anchorEl","setAnchorEl","handleClose","onClick","event","currentTarget","variantMapping","Menu","Boolean","onClose","MenuItem","getState","justifyContent","menuButton","Header","AppBar","Toolbar","IconButton","edge","noWrap","ProfilePage","lazy","DialogsPage","UsersPage","MessagesPage","All","exact","path","PATH","AppWithRoutes","PreloaderInitializationApplication","App","initializeTheApplication","initialize","useEffect","reducers","combineReducers","profileReducer","dialogsPage","messagesPage","usersPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","controlPanels","initializeTheApplicationAC","checkUserOrOwner","Number","myId","require","posts","imgSrc","countLikes","defaultStatusText","statusText","lookingAtMyProfile","setUserProfileAC","newPostText","updateStatusText","getStatusText","updateProfilePictureAC","checkId","addPost","updateNewStatusText","newStatusText","lookingMyProfile","notLookingMyProfile","console","log","defaultId"],"mappings":"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","file":"static/js/main.51f51eb3.chunk.js","sourcesContent":["import {dialogsAPI} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst START_COMMUNICATION = 'START_COMMUNICATION';\nconst GET_DIALOGS = 'GET_ALL_DIALOGS';\nconst GET_MESSAGES = 'GET_MESSAGES';\n\nlet initialState = {\n  messages: [],\n  dialogsData: [],\n  dialogs: [],\n  interlocutors: [],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return {\n              ...state,\n              messages: [...state.messages, {id: 6, message: action.newMessage}],\n              newMessageBody: \"\",\n             };\n    case START_COMMUNICATION:\n      return {\n              ...state,\n              interlocutors: [...state.interlocutors, action.interlocutor],\n             }\n    case GET_DIALOGS:\n      return {\n              ...state,\n              dialogs: [\n                        ...action.dialogs.map( dialogData => {\n                                                              if (!dialogData.photos.small) dialogData.photos.small = DEFAULT_AVATAR_SRC;\n                                                              if (!dialogData.photos.large) dialogData.photos.large = DEFAULT_AVATAR_SRC;\n                                                              return dialogData;   \n                                                             }),\n                       ],\n             }\n    case GET_MESSAGES:\n      return {\n              ...state,\n              messages: action.messages,\n             }\n    default:\n      return state;\n  }\n}\n\nexport default dialogsReducer;\n\nconst sendMessageCreatorAC = (newMessage) => ({type: SEND_MESSAGE, newMessage,});\nconst startCommunicationAC = (interlocutor) => ({type: START_COMMUNICATION, interlocutor,});\nconst getDialogsAC = (dialogs) => ({type: GET_DIALOGS, dialogs,});\nconst getMessagesAC = (messages) => ({type: GET_MESSAGES, messages,});\n\n\n\nexport const onSendMessageClick = (newMessageBody) => {\n      return (dispatch) => {\n               let action = sendMessageCreatorAC(newMessageBody);\n               dispatch(action);\n             }\n}\n\nexport const startCommunication = (userId) => {\n  return async (dispatch) => {\n           let response = await dialogsAPI.startCommunication(userId);\n           let action = startCommunicationAC(response);\n           dispatch(action);\n         }\n}\n\nexport const getDialogs = () => {\n  return async (dispatch) => {\n           const response = await dialogsAPI.getAllDialogs();\n           let action = getDialogsAC(response.data);\n           dispatch(action);\n  }\n}\n\nexport const getMessages = (userId, currentPage = 1, pagesSize = 10) => {\n  return async (dispatch) => {\n    const response = await dialogsAPI.getMessages(userId, currentPage, pagesSize);\n    const action = getMessagesAC(response.data);\n    dispatch(action);\n  }\n}","import {messagesAPI} from \"../api/api\";\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst GET_MESSAGES = 'GET_MESSAGES';\n\nlet initialState = {\n  messages: [],\n  totalCount: null,\n  error: null,\n};\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return {\n              ...state,\n              // messages: [...state.messages, {id: 6, message: action.newMessage}],\n              // newMessageBody: \"\",\n             };\n    case GET_MESSAGES:\n      return {\n              ...state,\n              messages: action.messages.items,\n              totalCount: action.messages.totalCount,\n             }\n    default:\n      return state;\n  }\n}\n\nconst sendMessageAC = (newMessage) => ({type: SEND_MESSAGE, newMessage,});\nconst getMessagesAC = (messages) => ({type: GET_MESSAGES, messages,});\n\nexport const sendMessage = (userId, message) => {\n      return async (dispatch) => {\n        \n               let response = await messagesAPI.sendMessage(userId, message);\n               \n               let action = sendMessageAC(response);\n               dispatch(action);\n             }\n}\n\nexport const getMessages = (userId, currentPage = 1, pagesSize = 10) => {\n  return async (dispatch) => {\n    const response = await messagesAPI.getMessages(userId, currentPage, pagesSize);\n    const action = getMessagesAC(response.data);\n    dispatch(action);\n  }\n}\n\nexport default messagesReducer;","import {usersApi} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst IS_FETCHING_FOLLOW_OR_UNFOLLOW_START = 'IS_FETCHING_FOLLOW_OR_UNFOLLOW_START';\nconst IS_FETCHING_FOLLOW_OR_UNFOLLOW_END = 'IS_FETCHING_FOLLOW_OR_UNFOLLOW_END';\n\nlet initialState = {\n  users: [],\n  defaultAvatarSrc: DEFAULT_AVATAR_SRC,\n  pagesSize: 5,\n  totalUsersCount: 0,\n  isFetching: false,\n  isFetchingFollowOrUnfollowIdList: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case SET_USERS:\n      return {\n              ...state,\n              users: [...action.users]\n             }\n    case FOLLOW:   \n      return {\n              ...state,\n              users: state.users.map(u => {\n                if(u.id === action.id) {\n                  u.followed = true;\n                }\n                return u;\n              }),\n             }\n    case UNFOLLOW:\n      return {\n              ...state,\n              users: state.users.map(u => {\n                if(u.id === action.id) {\n                  u.followed = false;\n                }\n                return u;\n              }),\n             }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n               ...state,\n               totalUsersCount: action.totalUsersCount,\n             }\n    case TOGGLE_IS_FETCHING:\n      if (action.isFetching) {\n        return {\n                ...state,\n                isFetching: true,\n               }\n      }\n      else {\n        return {\n                ...state,\n                isFetching: false,\n               }\n      }\n    case IS_FETCHING_FOLLOW_OR_UNFOLLOW_START:\n        return {\n                ...state,\n                isFetchingFollowOrUnfollowIdList: [...state.isFetchingFollowOrUnfollowIdList, action.id],\n               }\n    case IS_FETCHING_FOLLOW_OR_UNFOLLOW_END:\n      let isFetchingFollowOrUnfollowIdList = state.isFetchingFollowOrUnfollowIdList.filter(id => id !== action.id);\n        return {\n                ...state,\n                isFetchingFollowOrUnfollowIdList,\n               }\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\nexport let setUsers =(users) => ({type: SET_USERS, users});\nexport let followAC = (id) => ({type: FOLLOW, id});\nexport let unfollowAC = (id) => ({type: UNFOLLOW, id});\nexport let setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\nexport let toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let isFetchingFollowOrUnfollowStart = (id) => ({type: IS_FETCHING_FOLLOW_OR_UNFOLLOW_START, id});\nexport let isFetchingFollowOrUnfollowEnd = (id) => ({type: IS_FETCHING_FOLLOW_OR_UNFOLLOW_END, id});\n\nexport const getUsersSC = (currentPage, pagesSize) => {\n  return async (dispatch) => {\n    let action = toggleIsFetching(true);\n    dispatch(action);\n    let response = await usersApi.getUsers(currentPage, pagesSize);\n    if (response.status === 200) {\n      action = setUsers(response.data.items);\n      dispatch(action);\n      action = setTotalUsersCount(response.data.totalCount);\n      dispatch(action);\n      action = toggleIsFetching(false);\n      dispatch(action);\n    }\n  }\n}\n\nconst followUnfollow = async (dispatch, id, UsersApiFollowOrUnfollow, actionCreator) => {\n    let action = isFetchingFollowOrUnfollowStart(id);\n    dispatch(action);\n    let response = await UsersApiFollowOrUnfollow(id);\n    if (response.data.resultCode === 0) {\n      action = actionCreator(id);\n      dispatch(action);\n    }\n    action = isFetchingFollowOrUnfollowEnd(id);\n    dispatch(action);\n}\n\nexport const follow = (id) => {\n  return async (dispatch) => {\n    followUnfollow(dispatch, id, usersApi.follow.bind(usersApi), followAC);\n  }\n}\n\nexport const unfollow = (id) => {\n  return async (dispatch) => {\n    followUnfollow(dispatch, id, usersApi.unfollow.bind(usersApi), unfollowAC);\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__X7H-1\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0\",\n    headers: {\n        \"API-KEY\": \"fd622230-6210-4ef3-a457-276f95f589d0\",\n    },\n});\n\nexport const usersApi = {\n    getUsers(currentPage = 1, pagesSize = 10) {\n        return instance.get(`/users?page=${currentPage}&count=${pagesSize}`);\n    },\n    follow(id) {\n        return instance.post('/follow/' + id);\n    },\n    unfollow(id) {\n        return instance.delete('/follow/' + id);\n    },\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`/profile/`+ id);\n    },\n    getStatus(userId) {\n        return instance.get('/profile/status/' + userId)\n                       .then(response => response);\n    },\n    updateStatus(status) {\n        return instance.put('profile/status', {status: status});\n    },\n    updateProfilePicture(imagefile) {\n        let formData = new FormData();\n        formData.append(\"image\", imagefile.files[0]);\n        return instance.put('/profile/photo', formData, {\n                                                         headers: {\n                                                                   'Content-Type': 'multipart/form-data'\n                                                                  }\n                                                        }\n                                                        );\n    },\n    saveProfile(profile) {\n        return instance.put('/profile', profile)\n    },\n}\n\nexport const authAPI = {\n    getAuthMe() {\n        return instance.get('auth/me');\n    },\n    signIn(email, password, rememberMe = false, captcha = null) {\n        return instance.post('/auth/login', {email, password, rememberMe, captcha});\n    },\n    logOut() {\n        return instance.delete('/auth/login');\n    },\n    getCaptcha() {\n        return instance.get('/security/get-captcha-url');\n    }\n}\n\nexport const securituAPI = {\n    getCaptchaUrl() {\n        return instance.get('/security/get-captcha-url');\n    }\n}\n\nexport const dialogsAPI = {\n    startCommunication(userId) { // открыть диалог с другом\n        return instance.put('/dialogs/' + userId);\n    },\n    getAllDialogs() { // получить все диалоги\n        return instance.get(\"/dialogs\")\n    },\n}\n\nexport const messagesAPI = {\n    getMessages(userId, currentPage, pagesSize) { // получить сообщения с этим пользователем\n        return instance.get(`/dialogs/${userId}/messages?page=${currentPage}&count=${pagesSize}`);\n    },\n    sendMessage(userId, message = \"\") { // отправить сообщение\n        return instance.post(`/dialogs/${userId}/messages`, message);\n    },\n    messageViewed(messageId) { // сообщение просмотрено\n        return instance.get(`/dialogs/messages/${messageId}/viewed`);\n    },\n    deleteOnlyYouMessage(messageId) {\n        return instance.delete(`/dialogs/messages/${messageId}`)\n    },\n    addMessageSpam(messageId) { // добавить сообщение в спам\n        return instance.post(`/dialogs/messages/${messageId}/spam`);\n    },\n    restoreYourMessage(messageId) { // восстановить сообщение\n        return instance.put(`/dialogs/messages/${messageId}/restore`);\n    },\n    return_messages_newest_than_date(userId, date) { // не понятно что\n        return instance.put(`/dialogs/${userId}/messages/new?newerThen=${date}`);\n    },\n    getNewMessages() { // получить новые сообщения\n        return instance.get(`/dialogs/messages/new/count`);\n    },\n}\n/*\n/dialogs/id\nput\n\n*/","module.exports = __webpack_public_path__ + \"static/media/signIn.66b9eed0.png\";","module.exports = __webpack_public_path__ + \"static/media/signUp.e6f42918.png\";","module.exports = __webpack_public_path__ + \"static/media/logOut.a4e6b624.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.d48a8973.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__3RWNQ\"};","import {stopSubmit} from \"redux-form\";\nimport {authAPI, securituAPI} from \"../api/api\";\nimport {DEFAULT_USER_ID, SIGN_IN_IMG, SIGN_UP_IMG, LOG_OUT_IMG} from \"../constants/Authorization\";\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SIGN_IN = \"SIGN_IN\";\nconst SIGN_UP = \"SIGN_UP\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_CAPTCHA = \"GET_CAPTCHA\";\n\nlet initialState = {\n    userId: DEFAULT_USER_ID,\n    isAuth: false,\n    email: null,\n    login: null,\n    captchaUrl: \"\",\n    signInImg: SIGN_IN_IMG,\n    signUpImg: SIGN_UP_IMG,\n    logOutImg: LOG_OUT_IMG,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: action.isAuth,\n            }\n        case SIGN_IN:\n            return {\n                ...state,\n                isAuth: true,\n            }\n        case SIGN_UP:\n            return {\n                ...state,\n                isAuth: action.isAuth,\n            }\n        case LOG_OUT:\n            return {\n                ...state,\n                isAuth: false,\n            }\n        case GET_CAPTCHA:\n            return {\n                ...state,\n                captchaUrl: action.captchaUrl,\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default authReducer;\nexport let setUserDataAC = (userId = null, email = null, login = null, isAuth = false) => {\n    return {\n        type: SET_USER_DATA,\n        data: {\n            userId,\n            email,\n            login\n        },\n        isAuth: isAuth,\n    }\n};\n\nexport let signInAC = (isAuth) => ({type: SIGN_IN,});\n\nexport let signUpAC = (isAuth) => {\n    return {\n        type: SIGN_UP,\n        isAuth,\n    }\n}\n\nexport let logOutAC = () => ({type: LOG_OUT})\nconst getCaptchaAC = (captchaUrl) =>\n    ({type: GET_CAPTCHA, captchaUrl});\n\nexport const authMe = () => {\n    return async (dispatch) => {\n        let response = await authAPI.getAuthMe();\n        if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data;\n            let action = setUserDataAC(id, email, login, true);\n            dispatch(action);\n        } else if (response.data.resultCode === 2) {\n            let action = setUserDataAC(DEFAULT_USER_ID);\n            dispatch(action);\n        }\n        return response;\n    }\n}\n\nexport const signIn = (email, password, rememberMe = null, captcha) => {\n    return async (dispatch) => {\n        let response = await authAPI.signIn(email, password, rememberMe, captcha);\n        if (response.data.resultCode === 0) {\n            let action = authMe();\n            dispatch(action);\n        } else {\n            let action = authMe();\n            dispatch(action);\n            action = stopSubmit(\"authorization\", {_error: response.data.messages[0]});\n            dispatch(action);\n            let responseCaptcha = await securituAPI.getCaptchaUrl();\n            action = getCaptchaAC(responseCaptcha.data.url);\n            dispatch(action);\n        }\n        return response;\n    }\n}\n\nexport const signUp = () => {\n    return (dispatch) => {\n    }\n}\n\nexport const logOut = () => {\n    return async (dispatch, getState) => {\n        let response = await authAPI.logOut();\n        if (response.data.resultCode === 0) {\n            let action = setUserDataAC(DEFAULT_USER_ID);\n            dispatch(action);\n        }\n        return response;\n    }\n}","import PreloaderDefault from \"./PreloaderDefault\"\nexport default PreloaderDefault;","import React from \"react\";\n\nconst PreloaderDefault = () => {\n  return (<div>\n            <h2>Загрузка...</h2>\n          </div>\n          );\n};\n\nexport default PreloaderDefault;","import React from \"react\";\nimport PreloaderDefault from \"../components/Preloaders/PreloaderDefault\";\n\nexport const withSuspense = (Component) => {\n  return (props) => {\n    return <React.Suspense fallback={<PreloaderDefault />}>\n             <Component {...props} />\n           </React.Suspense>\n  };\n}","import React from \"react\";\nimport {NavLink} from 'react-router-dom'\nimport PropTypes from \"prop-types\";\nimport style from \"../../styles-global/FormControls.module.scss\";\nimport {useForm, Controller} from \"react-hook-form\";\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst AuthorizationForm = (props) => {\n    const classes = useStyles();\n    const {handleRegistration, captchaUrl} = props;\n\n    const validationSchema = Yup.object().shape({\n        login: Yup.string()\n            .required('Поле обязательно для заполнения.')\n            .min(2, 'Миниум 2 символа!')\n            .max(50, 'Максимум 50 символов')\n            .matches(/[@]/, 'Символ @ обязателен'),\n        password: Yup.string()\n            .required('Поле обязательно для заполнения.')\n            .min(2, 'Миниум 2 символа!')\n            .max(50, 'Максимум 50 символов'),\n    });\n\n    const {register, formState, handleSubmit, control} = useForm({\n        mode: 'onBlur',\n        resolver: yupResolver(validationSchema)\n    });\n\n    const {errors, touchedFields} = formState;\n\n    return (\n        <form onSubmit={handleSubmit(handleRegistration)} className={classes.form}>\n            <div>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Адрес электронной почты\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    placeholder=\"art@gmail.com\"\n                    type=\"text\"\n                    className={(errors.login && style.inCorrect) || (touchedFields.login && style.correct)}\n                    {...register(\"login\")}\n                />\n                {errors.login && <p>{errors.login.message}</p>}\n            </div>\n            <div>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Пароль\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder=\"LoG234HH\"\n                    className={(errors.password && style.inCorrect) || (touchedFields.password && style.correct)}\n                    {...register(\"password\")}\n                />\n                {errors.password && <p>{errors.password.message}</p>}\n            </div>\n            <div>\n                <Controller\n                    name=\"rememberMe\"\n                    defaultValue={false}\n                    control={control}\n                    rules={{required: true}}\n                    render={({field}) => (\n                        <FormControlLabel {...field} control={<Checkbox/>} label=\"Запомнить меня\"/>\n                    )}\n                />\n            </div>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n                Залогиниться\n            </Button>\n            <div>\n                {captchaUrl && <img src={captchaUrl} alt={\"captcha\"}/>}\n                {captchaUrl && <div><input type=\"text\"\n                                           {...register(\"captcha\")} />\n                </div>}\n            </div>\n\n            <Box display=\"flex\" flexDirection=\"row-reverse\">\n                <Link component={NavLink} to=\"/profile\">\n                    Войти не авторизованным\n                </Link>\n            </Box>\n            <Box mt={5}>\n                    <Typography color=\"inherit\" variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        Социальная сеть <br />{new Date().getFullYear()}\n                    </Typography>\n            </Box>\n        </form>\n    );\n}\n\nAuthorizationForm.propTypes = {\n    captchaUrl: PropTypes.string.isRequired,\n    handleRegistration: PropTypes.func.isRequired,\n};\n\nexport default AuthorizationForm;","import AuthorizationForm from \"./AuthorizationForm\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {signIn} from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\n\nconst AuthorizationFormContainer = (props) => {\n  const {signIn, isAuth, captchaUrl} = props;\n  const handleRegistration = (formData) => {\n    signIn(formData.login, formData.password, formData.rememberMe, formData.captcha);\n  }\n\n  if(isAuth) return <Redirect to=\"/profile\" />\n  \n  return (<AuthorizationForm handleRegistration={handleRegistration}\n                             captchaUrl={captchaUrl} />);\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl,\n});\n\nconst actionCreators = {signIn};\n\nAuthorizationFormContainer.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  captchaUrl: PropTypes.string,\n  signIn: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(AuthorizationFormContainer);","import React from \"react\";\nimport AuthorizationForm from \"../../components/AuthorizationForm\";\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst AuthorizationPage = () => {\n  const classes = useStyles();\n\n  return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Вход\n            </Typography>\n            <AuthorizationForm />\n          </div>\n        </Grid>\n      </Grid>\n  );\n}\n\nexport default AuthorizationPage;","import AuthorizationPage from \"./AuthorizationPage\";\nexport default AuthorizationPage;","export default {\n    NULL_PATH: '/',\n    DIALOGS: '/dialogs',\n    MESSAGES: '/messages',\n    PROFILE: '/profile',\n    USERS: '/users',\n    AUTHORIZATION: '/authorization',\n    MY_APP: '/my-app',\n    NEWS: '/news',\n    MUSIC: '/music',\n    SETTINGS: '/settings',\n    ALL: '*',\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n\n    // necessary for content to be below app bar\n    toolbar: {\n        ...theme.mixins.toolbar,\n        minHeight: '0 !important',\n        height: '0 !important',\n    },\n    toolbarMobile: {\n        marginTop: '120px',\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerPaperLarge: {\n        position: \"static\",\n    },\n    drawerPaperMobile: {\n\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    test: {\n        zIndex: '1 !important',\n    },\n}));\n\nconst MyDrawer = (props) => {\nconst {classes, classToolbar} = props;\n\n return (\n    <div>\n        <div className={classToolbar} />\n        <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                    <ListItemText primary={text} />\n                </ListItem>\n            ))}\n        </List>\n        <Divider />\n        <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                    <ListItemText primary={text} />\n                </ListItem>\n            ))}\n        </List>\n    </div>);\n}\n\nconst Navigation = (props) => {\n    const {clickProfileLink, navigationPanelVisibility, toggleNav} = props;\n    const {window} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n\n\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (<div className={classes.test}>\n        <div className={classes.root}>\n            <CssBaseline/>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={navigationPanelVisibility}\n                        classes={{\n                            paper: classes.drawerPaper,\n                            root: classes.test,\n                            modal: classes.test,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                            onEscapeKeyDown: toggleNav,\n                            onBackdropClick: toggleNav,\n                        }}\n                    >\n                        <MyDrawer classes={classes} classToolbar={`${classes.toolbar}  ${classes.toolbarMobile}`} />\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: `${classes.drawerPaper} ${classes.drawerPaperLarge}`,\n                        }}\n                        variant=\"permanent\"\n                        open={navigationPanelVisibility}\n                    >\n                        <MyDrawer classes={classes} classToolbar={classes.toolbar} />\n                    </Drawer>\n                </Hidden>\n            </nav>\n\n        </div>\n    </div>);\n}\n\nNavigation.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n    clickProfileLink: PropTypes.func.isRequired,\n};\n\nexport default Navigation;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Navigation from './Navigation';\nimport NavigationTes from './NavigationTes';\nimport {getProfile} from '../../redux/profile-reducer';\nimport {refreshRequests} from '../../redux/app-reducer';\nimport {toggleNav} from \"../../redux/app-reducer.js\";\nimport {connect} from \"react-redux\";\n\nconst NavigationContainer = (props) => {\n  const {refreshRequests, navigationPanelVisibility, toggleNav} = props;\n\n  const clickProfileLink = () => {\n    refreshRequests();\n  }\n\n  return (<>\n    <NavigationTes clickProfileLink={clickProfileLink}\n                   navigationPanelVisibility={navigationPanelVisibility}\n                   toggleNav={toggleNav} />\n    {/*<Navigation clickProfileLink={clickProfileLink} />*/}\n  </>);\n}\n\nNavigationContainer.propTypes = {\n  refreshRequests: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  redrawToProfileComponent: state.profilePage.redrawToProfileComponent,\n  navigationPanelVisibility: state.app.navigationPanelVisibility,\n});\n\nconst actionCreators = {\n  getProfile,\n  refreshRequests,\n  toggleNav,\n}\n\nexport default connect(mapStateToProps, actionCreators)(NavigationContainer);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {NavLink} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport PermIdentity from '@material-ui/icons/PermIdentity';\nimport Email from '@material-ui/icons/Email';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        color: '#3f51b5',\n    },\n    exit: {\n        textTransform: 'none',\n        textAlign: 'center',\n        width: '100%',\n    },\n    login: {\n        textTransform: 'none',\n        textAlign: 'center',\n        width: '100%',\n    },\n    auth: {\n        textTransform: 'none',\n        textAlign: 'center',\n        width: '100%',\n    },\n    avatar: {\n        marginRight: '5px',\n    },\n    mainButton: {\n        width: 'min-content',\n        margin: '0 10px 0 auto',\n        \"&:hover\": {\n            textDecoration: 'none',\n        }\n    }\n}));\n\nconst AuthorizationPanel = (props) => {\n    const {isAuth, authorizationInfo, logOut, photos} = props;\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (<>\n        {isAuth && <>\n            <Button className={classes.mainButton} onClick={handleClick}>\n                <Avatar className={classes.avatar} alt=\"User\" src={photos && photos.small}/>\n                <Typography className={classes.root + ' ' + classes.login}\n                            variantMapping={Button}>{authorizationInfo.login}</Typography>\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <List>\n                    <ListItem>\n                        <ListItemIcon>\n                            <PermIdentity/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Айди: \" + authorizationInfo.userId}/>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <Email/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Почта: \" + authorizationInfo.email}/>\n                    </ListItem>\n                </List>\n                <MenuItem onClick={() => {\n                    handleClose();\n                    logOut();\n                }}>\n                    <Typography className={classes.root + ' ' + classes.exit}>Выйти</Typography>\n                </MenuItem>\n            </Menu>\n        </>}\n        {!isAuth && <>\n            <Button className={classes.mainButton}\n                    component={NavLink}\n                    to=\"/authorization\">\n                <PermIdentity display=\"flex\" className={`${classes.root} ${classes.avatar}`}/>\n                <Typography className={classes.root + ' ' + classes.auth}>Авторизация</Typography>\n            </Button>\n        </>}\n    </>);\n};\n\nAuthorizationPanel.propTypes = {\n    isAuth: PropTypes.bool.isRequired,\n    authorizationInfo: PropTypes.object.isRequired,\n    logOut: PropTypes.func.isRequired,\n    photos: PropTypes.object,\n}\n\nexport default AuthorizationPanel;","import AuthorizationPanel from \"./AuthorizationPanel\";\nimport {connect} from \"react-redux\";\nimport {logOut, authMe} from \"../../redux/auth-reducer\";\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    photos: state.profilePage.profile.photos,\n    authorizationInfo: {  \n                        userId: state.auth.userId,\n                        email: state.auth.email,\n                        login: state.auth.login,\n                        },\n});\n\nconst actionCreators = {\n  logOut,\n  authMe\n};\n\nexport default connect(mapStateToProps, actionCreators)(AuthorizationPanel);","import React from \"react\";\nimport style from \"./Header.module.scss\";\nimport AuthorizationPanel from \"../AuthorizationPanel\";\nimport AppBar from '@material-ui/core/AppBar';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles( theme => ({\n    appBar: {\n        position: 'relative',\n        zIndex: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        minHeight: '100px',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n}))\n\nconst Header = (props) => {\n    const {toggleNav} = props;\n    const classes = useStyles();\n  return (\n    <>\n      <AppBar className={classes.appBar}\n              color='default'\n              position='static'>\n          <Toolbar>\n              <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={toggleNav}\n                  className={classes.menuButton}\n              >\n                  <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                  Responsive drawer\n              </Typography>\n          </Toolbar>\n        <AuthorizationPanel />\n      </AppBar>\n    </>\n  );\n};\n\nexport default Header;\n","import Header from './Header.jsx';\nimport {toggleNav} from \"../../redux/app-reducer.js\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({toggleNav: state.app.toggleNav});\nconst actionCreators = ({toggleNav});\n\nexport default connect(mapStateToProps, actionCreators)(Header);","import React from \"react\";\nimport style from \"./App.module.scss\";\nimport {Route, Switch} from 'react-router-dom';\nimport {withSuspense} from \"../../hoc/withSuspense\";\nimport {Redirect} from \"react-router-dom\";\nimport AuthorizationPage from '../../pages/AuthorizationPage';\nimport Navigation from '../Navigation';\nimport PATH from '../../constants/path';\nimport Header from \"../Header\";\n\nconst ProfilePage = React.lazy(() => import('../../pages/ProfilePage'));\nconst DialogsPage = React.lazy(() => import('../../pages/DialogsPage'));\nconst UsersPage = React.lazy(() => import('../../pages/UsersPage'));\nconst MessagesPage = React.lazy(() => import('../../pages/MessagesPage'));\n\nconst All = () => {\n    return (<>\n        <Header />\n        <div className={style.container}>\n            <Navigation/>\n            <Switch>\n                <Route exact path={PATH.NULL_PATH} render={() => <Redirect to='/profile'/>}/>\n                <Route path={PATH.DIALOGS} render={withSuspense(DialogsPage)}/>\n                <Route path={PATH.MESSAGES + '/:userId?'} render={withSuspense(MessagesPage)}/>\n                <Route path={PATH.PROFILE + '/:userId?'} render={withSuspense(ProfilePage)}/>\n                <Route path={PATH.MY_APP + '/:userId?'} render={withSuspense(ProfilePage)}/>\n                <Route path={PATH.USERS} render={withSuspense(UsersPage)}/>\n                <Route path={PATH.ALL} render={() => <h2>Error 404, not found!</h2>}/>\n            </Switch>\n        </div>\n    </>);\n}\n\n\nconst AppWithRoutes = () => {\n    return (<>\n        <Switch>\n            <Route path={PATH.AUTHORIZATION} render={() => <AuthorizationPage/>}/>\n            <Route path={PATH.ALL} render={() => <All />} />\n        </Switch>\n    </>);\n}\n\nexport default AppWithRoutes;","import PreloaderInitializationApplication from \"./PreloaderInitializationApplication\";\nexport default PreloaderInitializationApplication;","import React from \"react\";\n\nconst PreloaderInitializationApplication = () => {\n  return (<div>\n            <h1>Инициализация приложения!</h1>\n          </div>\n          );\n};\n\nexport default PreloaderInitializationApplication;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppWithRoutes from \"./AppWithRoutes\";\nimport Header from \"../Header\";\nimport PreloaderInitializationApplication from \"../Preloaders/PreloaderInitializationApplication\";\n\nconst App = (props) => {\n  const {authMe, initializeTheApplication, initialize} = props;\n\n  useEffect(() => {\n    (async () => {\n           await authMe();\n           initializeTheApplication(true);\n    })();\n  }, [authMe, initializeTheApplication]);\n\n  if (!initialize) return <PreloaderInitializationApplication />;\n  \n  return (<>\n            {initialize && <AppWithRoutes />}\n          </>\n  );\n}\n\nApp.propTypes = {\n  authMe: PropTypes.func.isRequired,\n  initializeTheApplication: PropTypes.func.isRequired,\n  initialize: PropTypes.bool.isRequired,\n};\n\nexport default App;","import {connect} from \"react-redux\";\nimport {authMe} from \"../../redux/auth-reducer\";\nimport {initializeTheApplication} from \"../../redux/app-reducer\";\nimport App from \"./App\";\n\nconst mapStateToProps = (state) => {\n    return {\n      initialize: state.app.initializeTheApplication,\n    }\n}\n\nconst actionCreators = {\n    authMe,\n    initializeTheApplication\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);","import {combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport messagesReducer from \"./messages-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport app from \"./app-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\nimport {reducer as formReducer} from \"redux-form\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  messagesPage: messagesReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: app,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.store = store;\nexport default store;","import App from './components/App';\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom';\nimport React from 'react';\nimport store from './redux/redux-store.js';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(<BrowserRouter>\n                  <Provider store={store}>\n                    <App />\n                  </Provider>\n                </BrowserRouter>, document.getElementById('root'));\n","const INITIALIZE_THE_APPLICATION = \"INITIALIZE_THE_APPLICATION\";\nconst OPEN_CONTROL_PANEL = \"OPEN_CONTROL_PANEL\";\nconst CLOSE_CONTROL_PANEL = \"CLOSE_CONTROL_PANEL\";\nconst REFRESH_REQUEST = \"REFRESH_REQUESTS\";\nconst TOGGLE_NAV = \"TOGGLE_NAV\";\n\nlet initialState = {\n    initializeTheApplication: false,\n    controlPanels: false,\n    refreshRequests: false,\n    navigationPanelVisibility: false,\n};\n\nconst app = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZE_THE_APPLICATION:\n            return {\n                ...state,\n                initializeTheApplication: action.initializeTheApplication,\n            }\n        case OPEN_CONTROL_PANEL:\n\n            return {\n                ...state,\n                controlPanels: true,\n            }\n        case CLOSE_CONTROL_PANEL:\n            return {\n                ...state,\n                controlPanels: false,\n            }\n        case REFRESH_REQUEST:\n            return {\n                ...state,\n                refreshRequests: !(state.refreshRequests),\n            }\n        case TOGGLE_NAV:\n            return {\n                ...state,\n                navigationPanelVisibility: !(state.navigationPanelVisibility),\n            }\n        default:\n            return state;\n    }\n}\n\nexport let initializeTheApplicationAC = (initializeTheApplication) => {\n    return {\n        type: INITIALIZE_THE_APPLICATION,\n        initializeTheApplication,\n    }\n}\n\nconst openControlPanelAC = () => ({type: OPEN_CONTROL_PANEL});\nconst closeControlPanelAC = () => ({type: CLOSE_CONTROL_PANEL});\nconst refreshRequestsAC = () => ({type: REFRESH_REQUEST});\nconst toggleNavAC = () => ({type: TOGGLE_NAV});\n\nexport const initializeTheApplication = (initializeTheApplication) => {\n    return (dispatch) => {\n        dispatch(initializeTheApplicationAC(initializeTheApplication));\n    }\n}\n\nexport const openControlPanel = () => {\n    return (dispatch) => {\n\n        let action = openControlPanelAC();\n        dispatch(action);\n    }\n}\n\nexport const closeControlPanel = () => {\n    return (dispatch) => {\n\n        let action = closeControlPanelAC();\n        dispatch(action);\n    }\n}\n\nexport const checkUserOrOwner = (id) => {\n    return (dispatch, getState) => {\n        id = Number(id);\n        const myId = getState().auth.userId;\n        const isAuth = getState().auth.isAuth;\n        if (id && id === myId) { // есть в адресной строке id и он мой ОТКРЫТЬ\n            let action = openControlPanelAC();\n            dispatch(action);\n        } else if (id) { // есть в адресной строке id и он не мой СКРЫТЬ\n            let action = closeControlPanelAC();\n            dispatch(action);\n        } else if (isAuth) { // если я авторизован и адресная строка пустая ОТКРЫТЬ\n            let action = openControlPanelAC();\n            dispatch(action);\n        } else if (!isAuth) { // иначе если я не авторизован и адресная строка пустая СКРЫТЬ\n            let action = closeControlPanelAC();\n            dispatch(action);\n        }\n    }\n}\n\nexport const refreshRequests = () => {\n    return (dispatch) => {\n        const action = refreshRequestsAC();\n        dispatch(action);\n    }\n}\n\nexport const toggleNav = () => {\n    return (dispatch) => {\n        const action = toggleNavAC();\n        dispatch(action);\n    }\n}\n\nexport default app;","export const SIGN_IN_IMG = require(\"../images/signIn.png\");\nexport const SIGN_UP_IMG = require(\"../images/signUp.png\");\nexport const LOG_OUT_IMG = require(\"../images/logOut.png\");\nexport const DEFAULT_USER_ID = 2;","export const DEFAULT_AVATAR_SRC = require(\"../images/avatar.png\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"FormControls_default__2z3yg\",\"correct\":\"FormControls_correct__Xq_7Y\",\"inCorrect\":\"FormControls_inCorrect__1YsSa\",\"promptText\":\"FormControls_promptText__3IDk0\",\"inCorrectSubmitDataHint\":\"FormControls_inCorrectSubmitDataHint__TEXh1\"};","import {profileAPI} from \"../api/api\";\nimport {DEFAULT_AVATAR_SRC} from \"../constants/Users\";\nimport {DEFAULT_STATUS_TEXT} from \"../constants/Profile\";\nimport {DEFAULT_USER_ID} from \"../constants/Authorization\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst START_FETCHING = 'START_FETCHING';\nconst STOP_FETCHING = 'STOP_FETCHING';\nconst GET_STATUS = 'GET_STATUS';\nconst UPDATE_STATUS_TEXT = 'UPDATE_STATUS_TEXT';\nconst SET_FLAG_LOOKING_AT_MY_PROFILE = 'SET_FLAG_LOOKING_AT_MY_PROFILE';\nconst SET_FLAG_NOT_LOOKING_AT_MY_PROFILE = 'SET_FLAG_NOT_LOOKING_AT_MY_PROFILE';\nconst UPDATE_PROFILE_PICTURE = 'UPDATE_PROFILE_PICTURE';\nconst SAVE_PROFILE = 'SAVE_PROFILE';\n\n//updateProfilePicture\n\nlet initialState = {\n  posts: [{\n      content: 'alo',\n      imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n      countLikes: '1',\n    },\n    {\n      content: 'helo',\n      imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n      countLikes: '3',\n    },\n  ],\n  profile: {},\n  isFetching: false,\n  defaultStatusText: DEFAULT_STATUS_TEXT,\n  statusText: DEFAULT_STATUS_TEXT,\n  lookingAtMyProfile: true,\n  redrawToProfileComponent: true,\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_PROFILE:\n      return {\n              ...state,\n              profile: {\n                        ...action.profile,\n                        photos: {\n                                 ...action.profile.photos,\n                                 large: action.profile.photos.large || DEFAULT_AVATAR_SRC,\n                                }\n                       },\n             };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, {\n            content: action.message,\n            imgSrc: 'http://sun9-44.userapi.com/s/v1/if1/qw3vWR63rnWIPexrEErujILvop-GpxX8MJRJx1emFNrgy2Ve9Hf3sqh5NLHETJNtyNMxaiTe.jpg?size=200x0&quality=96&crop=18,0,586,594&ava=1',\n            countLikes: '222',\n          }],\n          newPostText: \"\",\n      };\n    case START_FETCHING:\n      return {\n        ...state,\n        isFetching: true,\n      }\n      case STOP_FETCHING:\n        return {\n          ...state,\n          isFetching: false,\n        }\n      case UPDATE_STATUS_TEXT:\n        let updateStatusText = action.statusText && action.statusText !== \"\"? action.statusText: DEFAULT_STATUS_TEXT;\n        return {\n                ...state,\n                statusText: updateStatusText,\n               }\n      case SET_FLAG_LOOKING_AT_MY_PROFILE:\n        return {\n                ...state,\n                lookingAtMyProfile: true,\n               }\n      case SET_FLAG_NOT_LOOKING_AT_MY_PROFILE:\n        return {\n                ...state,\n                lookingAtMyProfile: false,\n               }\n      case GET_STATUS:\n        let getStatusText = action.statusText && action.statusText !== \"\"? action.statusText: DEFAULT_STATUS_TEXT;\n        return {\n                ...state,\n                statusText: getStatusText,\n               }\n      case UPDATE_PROFILE_PICTURE:\n        return {\n                ...state,\n                profile: {\n                          ...state.profile,\n                          photos: {...action.imagefile}\n                         },\n               }\n      case SAVE_PROFILE:\n        return {\n                ...state,\n                profile: {\n                          ...state.profile,\n                          ...action.profile,\n                         }\n               }\n        default:\n          return state;\n  }\n}\n\nexport default profileReducer;\n\nexport let addPostAC = (text) =>\n  ({\n    type: ADD_POST,\n    message: text,\n  });\n\nexport let setUserProfileAC = (profile) =>\n  ({\n    type: SET_USER_PROFILE,\n    profile\n  });\n\nexport let startFetchingAC = () =>\n  ({\n    type: START_FETCHING\n  });\n\nexport let stopFetchingAC = () =>\n  ({\n    type: STOP_FETCHING\n  });\n\nexport let updateNewStatusTextAC = (statusText) =>\n({\n  type: UPDATE_STATUS_TEXT,\n  statusText,\n});\n\nexport let lookingMyProfileAC = () =>\n({\n  type: SET_FLAG_LOOKING_AT_MY_PROFILE,\n});\n\nexport let notLookingMyProfileAC = () =>\n({\n  type: SET_FLAG_NOT_LOOKING_AT_MY_PROFILE,\n});\n\nexport let getStatusAC = (statusText) =>\n({\n  type: GET_STATUS,\n  statusText\n})\n\nexport let updateProfilePictureAC = (imagefile) =>\n({\n  type: UPDATE_PROFILE_PICTURE,\n  imagefile,\n})\n\nexport let saveProfileAC = (profile) =>\n({\n  type: SAVE_PROFILE,\n  profile,\n})\n\nexport const getProfile = (id) => {\n  return async (dispatch, getState) => {\n    id = checkId(id, getState().auth.isAuth, getState().auth.userId, DEFAULT_USER_ID);\n    let action = startFetchingAC();\n    dispatch(action);\n    let response = await profileAPI.getProfile(id);   \n    if (response.status === 200) {\n      action = setUserProfileAC(response.data);\n      dispatch(action);\n      action = stopFetchingAC();\n      dispatch(action);\n    }\n  }\n}\n\nexport const addPost = (newPostText) => {\n  return (dispatch) => {\n    let action = addPostAC(newPostText);\n    dispatch(action);\n  }\n}\n\nexport const updateNewStatusText = (newStatusText) => {\n  return async (dispatch) => {\n    let response = await profileAPI.updateStatus(newStatusText)\n    if (response.status === 200) {\n      let action = updateNewStatusTextAC(newStatusText);\n      dispatch(action);\n    }\n  }\n}\n\nexport const lookingMyProfile = () => {\n  return (dispatch) => {\n    let action = lookingMyProfileAC();\n    dispatch(action);\n  }\n}\n\nexport const notLookingMyProfile = () => {\n  return (dispatch) => {\n    let action = notLookingMyProfileAC();\n    dispatch(action);\n  }\n}\n\nexport const getStatus = (id) => {\n  return async (dispatch, getState) => {\n    \n    id = checkId(id, getState().auth.isAuth, getState().auth.userId, DEFAULT_USER_ID);\n    let response = await profileAPI.getStatus(id)\n    if (response.status === 200) {\n\n      let action = getStatusAC(response.data);\n      dispatch(action);\n    }\n  }\n}\n\nexport const updateProfilePicture = (imagefile) => {\n  return async (dispatch) => {\n    let response = await profileAPI.updateProfilePicture(imagefile);\n    if (response.data.resultCode === 0) {\n      let action = updateProfilePictureAC(response.data.data.photos);\n      dispatch(action);\n    }\n    else {\n      console.log(\"Фотография профиля не обновилась, не подходящий формат файла!\")\n    }\n  }\n}\n\nexport const saveProfile = (profile) => {\n  return async (dispatch, getState) => {\n    let id = getState().auth.userId;\n    let response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n      let response = await profileAPI.getProfile(id)\n      if (response.status === 200) {\n        let action = setUserProfileAC(response.data);\n        dispatch(action);\n      }\n    }\n    return response;\n  }\n}\n\nconst checkId = (id, isAuth, myId, defaultId) => {\n  if(!id) {\n    id = isAuth ? myId: defaultId;\n  }\n  return id;\n}","export const DEFAULT_STATUS_TEXT = \"Статуса нет.\";"],"sourceRoot":""}